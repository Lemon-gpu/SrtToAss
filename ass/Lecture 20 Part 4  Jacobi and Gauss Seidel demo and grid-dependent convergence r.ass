[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1080
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 辉英,Tahoma,35,&H00FFFFFF,&H000000FF,&H003B3C3D,&H00000000,0,0,0,0,70,70,1,0,1,1.3,0.2,2,0,0,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,00:00:00.000,00:00:08.700,辉英,,0,0,0,,Let's load, we have a matrix B that is 1025 by 1025. This is our right-hand side.
Dialogue: 0,00:00:09.920,00:00:19.920,辉英,,0,0,0,,So let's say the center, which is the middle 123 by 123, is our right-hand side.
Dialogue: 0,00:00:19.920,00:00:24.840,辉英,,0,0,0,,We put it as 125 to make up the boundary conditions we need.
Dialogue: 0,00:00:24.840,00:00:35.520,辉英,,0,0,0,,So let's figure out for a matrix like that, how do we code up a Jacobi iteration and how do we code up a Gauss-Seidel iteration.
Dialogue: 0,00:00:36.400,00:00:42.700,辉英,,0,0,0,,So let's first remind us what the Jacobi iteration looks like.
Dialogue: 0,00:00:42.700,00:00:44.360,辉英,,0,0,0,,Jacobi, not Jacobi.
Dialogue: 0,00:00:46.260,00:00:46.820,辉英,,0,0,0,,Okay.
Dialogue: 0,00:00:49.300,00:00:54.820,辉英,,0,0,0,,So let's make up a function that applies the Jacobi iteration for only one.
Dialogue: 0,00:00:54.840,00:01:01.400,辉英,,0,0,0,,So the input is u0, v, and the output is u1.
Dialogue: 0,00:01:02.180,00:01:11.500,辉英,,0,0,0,,So here, if we plug in uk to u0, we would get uk plus 1.
Dialogue: 0,00:01:12.960,00:01:13.960,辉英,,0,0,0,,Okay.
Dialogue: 0,00:01:14.520,00:01:22.280,辉英,,0,0,0,,So we assume that n is the dimension of the matrix.
Dialogue: 0,00:01:22.280,00:01:24.280,辉英,,0,0,0,,So let's...
Dialogue: 0,00:01:24.840,00:01:31.240,辉英,,0,0,0,,Let me tell you what is the grid I'm doing here.
Dialogue: 0,00:01:32.060,00:01:38.440,辉英,,0,0,0,,So this is the boundaries.
Dialogue: 0,00:01:38.860,00:01:41.720,辉英,,0,0,0,,We have values even on the boundaries.
Dialogue: 0,00:01:41.720,00:01:46.720,辉英,,0,0,0,,So the whole thing is going to be 125 points.
Dialogue: 0,00:01:48.180,00:01:52.700,辉英,,0,0,0,,That means the interior is going to be 123.
Dialogue: 0,00:01:54.840,00:01:55.100,辉英,,0,0,0,,Okay.
Dialogue: 0,00:01:55.960,00:02:05.260,辉英,,0,0,0,,And so if we look at the grids, if you look at the cells, this would be 1, this would be 124.
Dialogue: 0,00:02:05.260,00:02:05.800,辉英,,0,0,0,,Right.
Dialogue: 0,00:02:05.980,00:02:13.240,辉英,,0,0,0,,So there are 124 intervals and 125 points, 123 interior points.
Dialogue: 0,00:02:14.220,00:02:22.700,辉英,,0,0,0,,So n interval would be the size of v1.
Dialogue: 0,00:02:22.820,00:02:24.740,辉英,,0,0,0,,So that's the first dimension of 1 minus 1.
Dialogue: 0,00:02:24.840,00:02:25.840,辉英,,0,0,0,,Right.
Dialogue: 0,00:02:25.840,00:02:26.840,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:26.840,00:02:27.840,辉英,,0,0,0,,125 minus 1.
Dialogue: 0,00:02:27.840,00:02:31.300,辉英,,0,0,0,,And that helps me to compute dx.
Dialogue: 0,00:02:31.300,00:02:35.060,辉英,,0,0,0,,So let's assume our domain size is still equal to 1.
Dialogue: 0,00:02:35.060,00:02:37.960,辉英,,0,0,0,,So it's going to be 1 over n.
Dialogue: 0,00:02:37.960,00:02:40.120,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:40.120,00:02:43.380,辉英,,0,0,0,,So what do we need to...
Dialogue: 0,00:02:43.380,00:02:46.960,辉英,,0,0,0,,How do we apply the Jacobi iteration?
Dialogue: 0,00:02:46.960,00:02:49.980,辉英,,0,0,0,,We have u1 is going to be 0's.
Dialogue: 0,00:02:49.980,00:02:51.940,辉英,,0,0,0,,So we're going to use u1.
Dialogue: 0,00:02:51.940,00:02:52.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:52.940,00:02:53.960,辉英,,0,0,0,,So we're going to use u1.
Dialogue: 0,00:02:53.960,00:02:54.060,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:54.060,00:02:54.140,辉英,,0,0,0,,So we're going to use u1.
Dialogue: 0,00:02:54.140,00:02:54.160,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:54.160,00:02:54.240,辉英,,0,0,0,,So we're going to use u1.
Dialogue: 0,00:02:54.240,00:02:54.300,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:54.300,00:02:54.360,辉英,,0,0,0,,So we're going to use u1.
Dialogue: 0,00:02:54.360,00:02:54.480,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:54.480,00:02:54.540,辉英,,0,0,0,,So we're going to use u1.
Dialogue: 0,00:02:54.540,00:02:54.560,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:54.560,00:02:54.600,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:54.600,00:02:54.660,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:54.840,00:02:55.360,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:56.080,00:03:04.660,辉英,,0,0,0,,So we make, well, we don't have to do this.
Dialogue: 0,00:03:04.780,00:03:10.820,辉英,,0,0,0,,We can do minus dx squared over 4 times b.
Dialogue: 0,00:03:11.040,00:03:15.280,辉英,,0,0,0,,So that is this term, right?
Dialogue: 0,00:03:15.360,00:03:17.280,辉英,,0,0,0,,The first term in our iteration.
Dialogue: 0,00:03:18.560,00:03:23.600,辉英,,0,0,0,,And then for i goes from 1 to n plus...
Dialogue: 0,00:03:24.300,00:03:24.600,辉英,,0,0,0,,Well, I would...
Dialogue: 0,00:03:24.600,00:03:35.000,辉英,,0,0,0,,we are doing the interior so 2 to n and for j goes from 2 to n we would be doing u1 of i j
Dialogue: 0,00:03:36.120,00:03:47.160,辉英,,0,0,0,,would be equal to this itself plus the average of the in the average
Dialogue: 0,00:03:47.160,00:03:57.000,辉英,,0,0,0,,of well this is uh for jacobi the only difference is these are all of them are k instead of k plus 1
Dialogue: 0,00:03:57.000,00:04:14.200,辉英,,0,0,0,,right so u0 of i minus 1 j plus u0 of i plus 1 j plus u0 of i j minus 1 plus u0 of i j plus 1
Dialogue: 0,00:04:16.120,00:04:16.920,辉英,,0,0,0,,divided by 4
Dialogue: 0,00:04:17.160,00:04:29.240,辉英,,0,0,0,,so that's what we are looking at and end so that completes our jacobi iteration for the matrix
Dialogue: 0,00:04:31.000,00:04:34.040,辉英,,0,0,0,,and for example let's make a u0
Dialogue: 0,00:04:36.280,00:04:38.840,辉英,,0,0,0,,to be zeros the size of b
Dialogue: 0,00:04:42.360,00:04:47.080,辉英,,0,0,0,,so it's the same and we can do u1 equal to jacobi
Dialogue: 0,00:04:47.480,00:04:50.600,辉英,,0,0,0,,u0 to be u0 and b so jav
Dialogue: 0,00:04:50.600,00:04:53.720,辉英,,0,0,0,,so
Dialogue: 0,00:04:55.000,00:04:58.200,辉英,,0,0,0,,thank you
Dialogue: 0,00:05:03.400,00:05:12.840,辉英,,0,0,0,,oh that works okay so so if we do i am sure of u1 it'll be pretty much a dark right because we
Dialogue: 0,00:05:12.840,00:05:17.000,辉英,,0,0,0,,only applied for worrying tradition and what we can do is that let's say
Dialogue: 0,00:05:17.160,00:05:22.380,辉英,,0,0,0,,u is equal to u0, and we can do basically u is equal to Jacobi u, b,
Dialogue: 0,00:05:22.760,00:05:26.180,辉英,,0,0,0,,and we can do that again, that again, that again, right?
Dialogue: 0,00:05:26.260,00:05:30.800,辉英,,0,0,0,,We can do this again for many times, and we can show I am sure of u.
Dialogue: 0,00:05:30.920,00:05:33.640,辉英,,0,0,0,,So we start to see some contour.
Dialogue: 0,00:05:33.880,00:05:36.440,辉英,,0,0,0,,You may be able to see something white about it, right?
Dialogue: 0,00:05:36.620,00:05:43.440,辉英,,0,0,0,,And I can do for i equals 1 to 100, u is equal to Jacobi u and b.
Dialogue: 0,00:05:47.160,00:05:58.220,辉英,,0,0,0,,I probably need to put a semicolon so that I don't get crazy output.
Dialogue: 0,00:06:00.480,00:06:01.820,辉英,,0,0,0,,So I do that.
Dialogue: 0,00:06:02.840,00:06:06.060,辉英,,0,0,0,,I seem to see an airplane showing up, right?
Dialogue: 0,00:06:06.100,00:06:07.300,辉英,,0,0,0,,So this is iterative method.
Dialogue: 0,00:06:07.300,00:06:14.740,辉英,,0,0,0,,As you iterate more, you see the solution closer and closer to something you may expect.
Dialogue: 0,00:06:16.020,00:06:16.340,辉英,,0,0,0,,Okay.
Dialogue: 0,00:06:16.580,00:06:17.140,辉英,,0,0,0,,So let's...
Dialogue: 0,00:06:17.160,00:06:23.260,辉英,,0,0,0,,try to modify the Jacobi iteration to Jacobi to Gauss-Seidel.
Dialogue: 0,00:06:27.220,00:06:28.920,辉英,,0,0,0,,I'll just call it Gauss.
Dialogue: 0,00:06:30.220,00:06:31.100,辉英,,0,0,0,,And...
Dialogue: 0,00:06:31.100,00:06:34.920,辉英,,0,0,0,,So what do I need to modify here?
Dialogue: 0,00:06:39.700,00:06:41.400,辉英,,0,0,0,,Which line should I modify?
Dialogue: 0,00:06:47.160,00:06:48.160,辉英,,0,0,0,,Line 8.
Dialogue: 0,00:06:48.160,00:06:49.160,辉英,,0,0,0,,Line 8, right.
Dialogue: 0,00:06:49.160,00:07:01.100,辉英,,0,0,0,,And which other terms I need to change if you think about the difference between Jacobi and Gauss-Seidel?
Dialogue: 0,00:07:01.100,00:07:07.260,辉英,,0,0,0,,I just need to change the u, k to u, k plus 1 for two terms, right?
Dialogue: 0,00:07:07.260,00:07:10.060,辉英,,0,0,0,,And which other terms are already computed?
Dialogue: 0,00:07:10.060,00:07:13.060,辉英,,0,0,0,,This one and this one, right?
Dialogue: 0,00:07:13.060,00:07:15.060,辉英,,0,0,0,,The j minus 1 and i minus 1 terms.
Dialogue: 0,00:07:15.060,00:07:16.060,辉英,,0,0,0,,So that will be...
Dialogue: 0,00:07:16.060,00:07:17.100,辉英,,0,0,0,,So that will be...
Dialogue: 0,00:07:17.100,00:07:21.100,辉英,,0,0,0,,all the modifications I need to change Jacobi to Gauss-Seidel.
Dialogue: 0,00:07:21.100,00:07:27.100,辉英,,0,0,0,,And again, let's see what the effect is.
Dialogue: 0,00:07:27.100,00:07:29.100,辉英,,0,0,0,,Okay.
Dialogue: 0,00:07:29.100,00:07:32.100,辉英,,0,0,0,,So let's do u equal to u0 again.
Dialogue: 0,00:07:32.100,00:07:35.100,辉英,,0,0,0,,And for i goes from 1 to 100.
Dialogue: 0,00:07:35.100,00:07:40.100,辉英,,0,0,0,,u is equal to Gauss-Seidel u .
Dialogue: 0,00:07:40.100,00:07:45.100,辉英,,0,0,0,,Okay.
Dialogue: 0,00:07:45.100,00:07:46.160,辉英,,0,0,0,,So now let's take a look.
Dialogue: 0,00:07:46.160,00:07:51.160,辉英,,0,0,0,,Again, we are converging to the solution, right?
Dialogue: 0,00:07:51.160,00:07:54.160,辉英,,0,0,0,,But the convergence is going to be very slow.
Dialogue: 0,00:07:54.160,00:07:58.160,辉英,,0,0,0,,Because now I have...
Dialogue: 0,00:07:58.160,00:08:04.160,辉英,,0,0,0,,Now I have an eigenvalue that is...
Dialogue: 0,00:08:04.160,00:08:10.160,辉英,,0,0,0,,that is cosine of pi divided by 124.
Dialogue: 0,00:08:10.160,00:08:14.160,辉英,,0,0,0,,That's what I expect to be the highest eigenvalue if I have a 1-point solution.
Dialogue: 0,00:08:14.160,00:08:22.160,辉英,,0,0,0,,If I have a 2-point solution, I will have an eigenvalue that is pretty much 1.
Dialogue: 0,00:08:22.160,00:08:23.160,辉英,,0,0,0,,Right?
Dialogue: 0,00:08:23.160,00:08:26.160,辉英,,0,0,0,,Format long.
Dialogue: 0,00:08:26.160,00:08:32.160,辉英,,0,0,0,,That will give me the actual eigenvalue, not rounded to something that is only 5 digits.
Dialogue: 0,00:08:32.160,00:08:35.160,辉英,,0,0,0,,So I get a bunch of 9s.
Dialogue: 0,00:08:35.160,00:08:40.160,辉英,,0,0,0,,And if I do that, okay, I get something times 10 to the minus 6.
Dialogue: 0,00:08:40.160,00:08:42.160,辉英,,0,0,0,,If I take 1, divide by that.
Dialogue: 0,00:08:42.160,00:08:46.160,辉英,,0,0,0,,Or more rigorously, log 2, divide by that.
Dialogue: 0,00:08:46.160,00:08:56.160,辉英,,0,0,0,,I need something like 74,000 iterations to make the error to be even half.
Dialogue: 0,00:08:56.160,00:08:59.160,辉英,,0,0,0,,That's a lot of iterations I need.
Dialogue: 0,00:08:59.160,00:09:07.160,辉英,,0,0,0,,And generally, if you remember the cosine curve at x equal to 0,
Dialogue: 0,00:09:07.160,00:09:10.160,辉英,,0,0,0,,the cosine curve is like a parabola, right?
Dialogue: 0,00:09:10.160,00:09:11.160,辉英,,0,0,0,,So if you take a term, right?
Dialogue: 0,00:09:11.160,00:09:14.160,辉英,,0,0,0,,So if you take a Taylor series approximation,
Dialogue: 0,00:09:14.160,00:09:17.160,辉英,,0,0,0,,the more n you have,
Dialogue: 0,00:09:17.160,00:09:23.160,辉英,,0,0,0,,the number of iterations you require would go like n squared.
Dialogue: 0,00:09:23.160,00:09:25.160,辉英,,0,0,0,,So because...
Dialogue: 0,00:09:25.160,00:09:29.160,辉英,,0,0,0,,I should illustrate that a little bit more.
Dialogue: 0,00:09:29.160,00:09:39.160,辉英,,0,0,0,,So your biggest lambda is equal to cosine of pi over n, right?
Dialogue: 0,00:09:39.160,00:09:41.160,辉英,,0,0,0,,So that is approximately...
Dialogue: 0,00:09:41.160,00:09:47.160,辉英,,0,0,0,,1 minus half, if you do the Taylor series expansion,
Dialogue: 0,00:09:47.160,00:09:50.160,辉英,,0,0,0,,pi over n squared.
Dialogue: 0,00:09:50.160,00:09:51.160,辉英,,0,0,0,,Okay.
Dialogue: 0,00:09:51.160,00:10:01.160,辉英,,0,0,0,,And my number of iterations required would be proportional to 1 over 1 minus lambda.
Dialogue: 0,00:10:01.160,00:10:07.160,辉英,,0,0,0,,Or log 2 over 1 minus lambda, which is log 2,
Dialogue: 0,00:10:07.160,00:10:09.160,辉英,,0,0,0,,divided by half of pi over n squared.
Dialogue: 0,00:10:09.160,00:10:15.160,辉英,,0,0,0,,So that goes like n squared.
Dialogue: 0,00:10:15.160,00:10:17.160,辉英,,0,0,0,,If you double your grid points,
Dialogue: 0,00:10:17.160,00:10:23.160,辉英,,0,0,0,,you should quadruple your number of iterations to converge to the same accuracy.
