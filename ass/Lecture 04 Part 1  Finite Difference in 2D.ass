[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1080
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 辉英,Tahoma,35,&H00FFFFFF,&H000000FF,&H003B3C3D,&H00000000,0,0,0,0,70,70,1,0,1,1.3,0.2,2,0,0,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,00:00:00.880,00:00:03.300,辉英,,0,0,0,,Today we are going to go beyond 1D.
Dialogue: 0,00:00:03.900,00:00:06.600,辉英,,0,0,0,,We are going to have two spatial dimensions at least.
Dialogue: 0,00:00:07.520,00:00:10.080,辉英,,0,0,0,,We will have x, we will have y.
Dialogue: 0,00:00:11.520,00:00:15.260,辉英,,0,0,0,,We will look at how differential equations are going to look like
Dialogue: 0,00:00:15.260,00:00:17.580,辉英,,0,0,0,,in two spatial dimensions.
Dialogue: 0,00:00:18.600,00:00:21.180,辉英,,0,0,0,,How to discretize a function of two dimensions,
Dialogue: 0,00:00:22.020,00:00:24.820,辉英,,0,0,0,,how to approximate differential operators in 2D,
Dialogue: 0,00:00:25.560,00:00:29.000,辉英,,0,0,0,,how to solve for it, how to visualize the solution.
Dialogue: 0,00:00:30.000,00:00:34.200,辉英,,0,0,0,,And also, what is the matrix form of two-dimensional problems?
Dialogue: 0,00:00:35.100,00:00:39.580,辉英,,0,0,0,,If you remember, in 1D we get this nice tri-diagonal matrix.
Dialogue: 0,00:00:40.540,00:00:42.160,辉英,,0,0,0,,In 2D, what do we get?
Dialogue: 0,00:00:42.520,00:00:44.420,辉英,,0,0,0,,How do we construct such matrices?
Dialogue: 0,00:00:45.740,00:00:49.480,辉英,,0,0,0,,And then, if we have time, we are going to talk about
Dialogue: 0,00:00:49.480,00:00:53.020,辉英,,0,0,0,,how to solve these matrix systems.
Dialogue: 0,00:00:54.860,00:00:57.680,辉英,,0,0,0,,And still, recall what we get in 1D.
Dialogue: 0,00:00:58.340,00:00:59.980,辉英,,0,0,0,,If we are solving an on-step,
Dialogue: 0,00:01:00.000,00:01:04.400,辉英,,0,0,0,,steady problem, we convert the PDE into ODE,
Dialogue: 0,00:01:05.040,00:01:06.740,辉英,,0,0,0,,and we use ODE solvers.
Dialogue: 0,00:01:08.080,00:01:10.140,辉英,,0,0,0,,If we are solving a steady-state problem,
Dialogue: 0,00:01:10.620,00:01:14.960,辉英,,0,0,0,,we convert the PDE into a matrix equation,
Dialogue: 0,00:01:15.600,00:01:17.940,辉英,,0,0,0,,and we need to solve that matrix equation.
Dialogue: 0,00:01:19.060,00:01:21.000,辉英,,0,0,0,,So here we are going to talk about
Dialogue: 0,00:01:21.000,00:01:23.200,辉英,,0,0,0,,how to solve the matrix equation
Dialogue: 0,00:01:23.200,00:01:27.320,辉英,,0,0,0,,coming out of multi-dimensional PDE problems.
Dialogue: 0,00:01:30.000,00:01:35.540,辉英,,0,0,0,,So, first of all, I want to discuss
Dialogue: 0,00:01:35.540,00:01:40.780,辉英,,0,0,0,,how do you discretize a multi-dimensional function.
Dialogue: 0,00:01:42.040,00:01:46.580,辉英,,0,0,0,,So, this is a pretty simple domain I call omega.
Dialogue: 0,00:01:47.740,00:01:50.340,辉英,,0,0,0,,So in 1D, we have been focused on an interval
Dialogue: 0,00:01:50.340,00:01:52.060,辉英,,0,0,0,,from, let's say, 0 to L.
Dialogue: 0,00:01:53.340,00:01:58.440,辉英,,0,0,0,,So in 2D, we usually use a Greek letter,
Dialogue: 0,00:01:58.800,00:01:59.940,辉英,,0,0,0,,omega, big omega, and we use omega to describe the function.
Dialogue: 0,00:01:59.940,00:02:01.740,辉英,,0,0,0,,So we use omega to denote the domain
Dialogue: 0,00:02:01.740,00:02:03.040,辉英,,0,0,0,,in which we solve the problem.
Dialogue: 0,00:02:04.300,00:02:08.600,辉英,,0,0,0,,So in this case, the omega is just a rectangle.
Dialogue: 0,00:02:10.040,00:02:10.220,辉英,,0,0,0,,Right?
Dialogue: 0,00:02:10.800,00:02:14.480,辉英,,0,0,0,,So our solution, the reason I have said elliptic
Dialogue: 0,00:02:14.480,00:02:16.800,辉英,,0,0,0,,is because we are considering the case
Dialogue: 0,00:02:16.800,00:02:18.240,辉英,,0,0,0,,where there is no time.
Dialogue: 0,00:02:18.500,00:02:22.620,辉英,,0,0,0,,We are just considering a function u of x and y.
Dialogue: 0,00:02:24.520,00:02:25.120,辉英,,0,0,0,,Okay?
Dialogue: 0,00:02:25.880,00:02:28.720,辉英,,0,0,0,,And let's say we want to solve this equation
Dialogue: 0,00:02:28.720,00:02:29.720,辉英,,0,0,0,,in the simplest form.
Dialogue: 0,00:02:29.940,00:02:33.240,辉英,,0,0,0,,Partial square u partial x square
Dialogue: 0,00:02:33.240,00:02:37.240,辉英,,0,0,0,,plus partial square u partial y square
Dialogue: 0,00:02:37.240,00:02:40.300,辉英,,0,0,0,,equal to f of x and y.
Dialogue: 0,00:02:41.660,00:02:44.420,辉英,,0,0,0,,And f is a given function of x and y.
Dialogue: 0,00:02:45.080,00:02:49.160,辉英,,0,0,0,,For example, let's say f is equal to 1.
Dialogue: 0,00:02:50.180,00:02:51.300,辉英,,0,0,0,,How to solve this?
Dialogue: 0,00:02:53.520,00:02:55.540,辉英,,0,0,0,,In addition to the differential equation,
Dialogue: 0,00:02:56.100,00:02:58.720,辉英,,0,0,0,,what else do we need to uniquely determine the solution?
Dialogue: 0,00:02:59.940,00:03:01.880,辉英,,0,0,0,,The affinity constant u.
Dialogue: 0,00:03:02.880,00:03:04.420,辉英,,0,0,0,,In addition to f we will in the remaining state
Dialogue: 0,00:03:04.420,00:03:05.860,辉英,,0,0,0,,have a relative positive component equal to semi-true.
Dialogue: 0,00:03:06.460,00:03:08.080,辉英,,0,0,0,,From these M-th tapes of the set B-th system,
Dialogue: 0,00:03:08.360,00:03:09.660,辉英,,0,0,0,,we should be able to determine the solution
Dialogue: 0,00:03:09.660,00:03:10.320,辉英,,0,0,0,,as U-tites x dot x plus x.
Dialogue: 0,00:03:11.760,00:03:12.620,辉英,,0,0,0,,So, let's take the relatively common function
Dialogue: 0,00:03:13.200,00:03:15.220,辉英,,0,0,0,,ofでした to have it as in the solution
Dialogue: 0,00:03:15.220,00:03:16.420,辉英,,0,0,0,,where the component R подIS critical x.
Dialogue: 0,00:03:16.660,00:03:17.960,辉英,,0,0,0,,If we need, we can take this as the moment
Dialogue: 0,00:03:17.960,00:03:19.420,辉英,,0,0,0,,value that meets h s and assign space
Dialogue: 0,00:03:19.420,00:03:21.260,辉英,,0,0,0,,and be able to get it by along the X axis over 3
Dialogue: 0,00:03:21.280,00:03:23.420,辉英,,0,0,0,,or even ten space up to the endors from here.
Dialogue: 0,00:03:24.420,00:03:25.200,辉英,,0,0,0,,A
Dialogue: 0,00:03:26.700,00:03:29.620,辉英,,0,0,0,,So� outcomes predict the final answer
Dialogue: 0,00:03:29.620,00:03:32.640,辉英,,0,0,0,,Maybe it's that long, if you look at the code itself.
Dialogue: 0,00:03:33.160,00:03:36.980,辉英,,0,0,0,,And if you compare the length of the code to discretize the boundary conditions,
Dialogue: 0,00:03:37.980,00:03:39.360,辉英,,0,0,0,,what do you think is the ratio?
Dialogue: 0,00:03:40.180,00:03:45.960,辉英,,0,0,0,,Which one do you think is more code, more effort, more time it takes to program?
Dialogue: 0,00:03:48.680,00:03:50.820,辉英,,0,0,0,,Boundary conditions, that's right.
Dialogue: 0,00:03:51.080,00:03:52.120,辉英,,0,0,0,,And how much longer?
Dialogue: 0,00:03:56.280,00:03:57.460,辉英,,0,0,0,,Five times longer?
Dialogue: 0,00:03:59.620,00:04:01.880,辉英,,0,0,0,,Like how long can you use your own tree as a boundary condition?
Dialogue: 0,00:04:03.220,00:04:03.880,辉英,,0,0,0,,That's right.
Dialogue: 0,00:04:03.940,00:04:04.760,辉英,,0,0,0,,It depends a lot.
Dialogue: 0,00:04:04.820,00:04:07.500,辉英,,0,0,0,,It depends on how many types of boundary conditions you have.
Dialogue: 0,00:04:07.500,00:04:14.820,辉英,,0,0,0,,For example, if your geometry has boundary condition of different types on different parts of the boundary.
Dialogue: 0,00:04:15.140,00:04:17.780,辉英,,0,0,0,,For example, in this case, I have four boundaries.
Dialogue: 0,00:04:18.100,00:04:19.780,辉英,,0,0,0,,That's only in 2D, right?
Dialogue: 0,00:04:20.540,00:04:23.180,辉英,,0,0,0,,The four boundaries may have different boundary conditions.
Dialogue: 0,00:04:24.580,00:04:29.500,辉英,,0,0,0,,In 3D, and also in more complex domains than this,
Dialogue: 0,00:04:29.620,00:04:33.060,辉英,,0,0,0,,I may have more than four types of boundary conditions.
Dialogue: 0,00:04:34.100,00:04:39.540,辉英,,0,0,0,,And the boundaries can be curved, and it can have other special tricks on them.
Dialogue: 0,00:04:39.860,00:04:45.540,辉英,,0,0,0,,So the length of the code used to discretize the boundary can easily be five times longer.
Dialogue: 0,00:04:46.100,00:04:47.380,辉英,,0,0,0,,Sometimes even more.
Dialogue: 0,00:04:47.860,00:04:53.140,辉英,,0,0,0,,So boundary conditions is a very complicated consideration.
Dialogue: 0,00:04:53.700,00:04:57.620,辉英,,0,0,0,,In this case, let's first consider the simplest type of boundary conditions.
Dialogue: 0,00:04:58.100,00:04:59.540,辉英,,0,0,0,,Let's say U.
Dialogue: 0,00:04:59.620,00:05:07.780,辉英,,0,0,0,,is equal to zero at x, y in the boundary.
Dialogue: 0,00:05:08.740,00:05:09.860,辉英,,0,0,0,,That's lambda.
Dialogue: 0,00:05:10.580,00:05:12.760,辉英,,0,0,0,,Oh, that's, yeah, that's the gamma.
Dialogue: 0,00:05:13.280,00:05:16.460,辉英,,0,0,0,,So gamma denotes the boundary of the domain.
Dialogue: 0,00:05:17.220,00:05:17.420,辉英,,0,0,0,,Okay.
Dialogue: 0,00:05:19.420,00:05:26.140,辉英,,0,0,0,,So remember in 1D, we discretize the function by storing only which part of the function?
Dialogue: 0,00:05:30.260,00:05:33.460,辉英,,0,0,0,,The value of the function on the grid points, right?
Dialogue: 0,00:05:34.180,00:05:35.540,辉英,,0,0,0,,In 2D, we do the same.
Dialogue: 0,00:05:36.980,00:05:42.580,辉英,,0,0,0,,And the most commonly used type of grid points are what we call Cartesian grid.
Dialogue: 0,00:05:43.940,00:05:50.660,辉英,,0,0,0,,A Cartesian grid is basically a tensor product of finite difference grids in 1D.
Dialogue: 0,00:05:52.260,00:05:55.780,辉英,,0,0,0,,So you discretize one of the dimensions using uniform grids.
Dialogue: 0,00:05:55.780,00:05:59.540,辉英,,0,0,0,,You discretize the other dimension also using uniform grids.
Dialogue: 0,00:05:59.620,00:06:09.620,辉英,,0,0,0,,So we are going to denote the x-axis with the index i, i equal to zero, i equal to one, two, et cetera, to nx.
Dialogue: 0,00:06:10.660,00:06:16.420,辉英,,0,0,0,,And the second dimension is used to, is, we use j.
Dialogue: 0,00:06:16.420,00:06:20.420,辉英,,0,0,0,,So j equal to zero, one, two, three, and all the way to ny.
Dialogue: 0,00:06:22.420,00:06:27.220,辉英,,0,0,0,,So we have nx intervals in x dimension.
Dialogue: 0,00:06:27.220,00:06:29.380,辉英,,0,0,0,,We have ny intervals in y dimension.
Dialogue: 0,00:06:29.940,00:06:37.540,辉英,,0,0,0,,So the number of grid points including the boundary is nx plus one and ny plus one,
Dialogue: 0,00:06:37.540,00:06:43.940,辉英,,0,0,0,,excluding the boundaries is nx minus one and nxny minus one.
Dialogue: 0,00:06:45.060,00:06:46.260,辉英,,0,0,0,,Yes?
Dialogue: 0,00:06:46.260,00:06:52.100,辉英,,0,0,0,,What is a tensor product and why is it called a tensor product?
Dialogue: 0,00:06:52.100,00:06:55.780,辉英,,0,0,0,,What is a tensor product and why is it called a tensor product?
Dialogue: 0,00:06:55.780,00:06:58.740,辉英,,0,0,0,,So the tensor product in mathematics is usually a non-tensor product.
Dialogue: 0,00:06:58.740,00:06:59.380,辉英,,0,0,0,,So if you want to, you're going to use a tensor product.
Dialogue: 0,00:06:59.380,00:07:11.540,辉英,,0,0,0,,a notation that is basically if you have a set A, if you have a set B, the tensor product
Dialogue: 0,00:07:11.540,00:07:23.400,辉英,,0,0,0,,A multiplied by B is defined as pairs of A and B for which A is in A and B is in B.
Dialogue: 0,00:07:23.400,00:07:27.960,辉英,,0,0,0,,So this is what's called a tensor product.
Dialogue: 0,00:07:29.380,00:07:36.860,辉英,,0,0,0,,Right, so this case basically the set A is all the grid points in the x dimension, the
Dialogue: 0,00:07:36.860,00:07:39.340,辉英,,0,0,0,,B is all the grid points in y dimension.
Dialogue: 0,00:07:39.340,00:07:41.940,辉英,,0,0,0,,So all possible combinations.
Dialogue: 0,00:07:41.940,00:07:48.200,辉英,,0,0,0,,Yes, yes, right, basically Cartesian product.
Dialogue: 0,00:07:48.200,00:07:59.100,辉英,,0,0,0,,So U with two subscripts are used to denote the solution U at x i and y j.
Dialogue: 0,00:07:59.100,00:07:59.200,辉英,,0,0,0,,Okay.
Dialogue: 0,00:07:59.380,00:08:13.200,辉英,,0,0,0,,Similarly, f of i j is used to denote the function f at x i and y j.
Dialogue: 0,00:08:13.200,00:08:15.320,辉英,,0,0,0,,All right.
Dialogue: 0,00:08:15.320,00:08:24.820,辉英,,0,0,0,,So with this, U i j and f i j, we start, we discretize the functions and next thing is
Dialogue: 0,00:08:24.820,00:08:28.900,辉英,,0,0,0,,we need to discretize the differential operators.
Dialogue: 0,00:08:28.900,00:08:38.760,辉英,,0,0,0,,By approximating them using only U i j's without having to access the solution at, in between
Dialogue: 0,00:08:38.760,00:08:39.920,辉英,,0,0,0,,the grid points.
