[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1080
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 辉英,Tahoma,35,&H00FFFFFF,&H000000FF,&H003B3C3D,&H00000000,0,0,0,0,70,70,1,0,1,1.3,0.2,2,0,0,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,00:00:00.000,00:00:07.280,辉英,,0,0,0,,Let's remind ourselves of the difference between finite difference, finite volume,
Dialogue: 0,00:00:07.280,00:00:13.640,辉英,,0,0,0,,and finite element. So I'm going back to the illustration I had before. In finite
Dialogue: 0,00:00:13.640,00:00:25.240,辉英,,0,0,0,,difference, remember we have... in finite difference, when we draw a function, the
Dialogue: 0,00:00:25.240,00:00:30.160,辉英,,0,0,0,,finite difference stores the values of the function on the grid points. Right?
Dialogue: 0,00:00:30.160,00:00:40.440,辉英,,0,0,0,,That's finite difference. In finite volume, we draw a function. Finite volume
Dialogue: 0,00:00:40.440,00:00:46.480,辉英,,0,0,0,,stores the cell averages. These are completely different ways of
Dialogue: 0,00:00:46.480,00:00:54.780,辉英,,0,0,0,,discretizing a function, representing a function. In finite element, let's see if
Dialogue: 0,00:00:54.780,00:00:55.220,辉英,,0,0,0,,we draw a function...
Dialogue: 0,00:00:55.220,00:01:03.960,辉英,,0,0,0,,For a similar function, how does finite element store the function?
Dialogue: 0,00:01:03.960,00:01:11.580,辉英,,0,0,0,,This is how finite element stores the function. It looks like piecewise straight lines, but
Dialogue: 0,00:01:11.580,00:01:19.420,辉英,,0,0,0,,can somebody take a guess at what is actually the piecewise linear representation of the
Dialogue: 0,00:01:19.420,00:01:24.760,辉英,,0,0,0,,function? How does the... how does the thick red line
Dialogue: 0,00:01:24.760,00:01:31.760,辉英,,0,0,0,,relate to the thin red line I just drew on the screen?
Dialogue: 0,00:01:31.760,00:01:39.620,辉英,,0,0,0,,List squares. That red line seems to be somehow minimizing the distance, minimizing the average
Dialogue: 0,00:01:39.620,00:01:50.620,辉英,,0,0,0,,distance in a certain way between the piecewise linear line and the original thin line. Right?
Dialogue: 0,00:01:50.620,00:01:53.660,辉英,,0,0,0,,So this is one way of doing finite element.
Dialogue: 0,00:01:54.760,00:01:59.000,辉英,,0,0,0,,And this is the primary way we are going to be discussing this in this class.
Dialogue: 0,00:01:59.000,00:02:07.220,辉英,,0,0,0,,But just to give you a little bit more insight into what finite element is doing, I'm just going to give you another...
Dialogue: 0,00:02:07.220,00:02:12.000,辉英,,0,0,0,,another demo, also with finite difference.
Dialogue: 0,00:02:12.000,00:02:17.500,辉英,,0,0,0,,I'm going to try to draw a very similar function as I did before.
Dialogue: 0,00:02:17.500,00:02:23.900,辉英,,0,0,0,,And this is also a different finite element approximation to the same... to the function.
Dialogue: 0,00:02:24.760,00:02:26.820,辉英,,0,0,0,,Let's see.
Dialogue: 0,00:02:26.820,00:02:33.120,辉英,,0,0,0,,So now you could draw a representation, say, for which the font size and the dark color
Dialogue: 0,00:02:33.120,00:02:38.220,辉英,,0,0,0,,are the mult deserve oversize out of the component.
Dialogue: 0,00:02:38.220,00:02:39.700,辉英,,0,0,0,,If you draw this!.
Dialogue: 0,00:02:39.700,00:02:40.200,辉英,,0,0,0,,Yeah.
Dialogue: 0,00:02:40.200,00:02:42.360,辉英,,0,0,0,,One could draw this.
Dialogue: 0,00:02:42.360,00:02:44.860,辉英,,0,0,0,,Can you show it?
Dialogue: 0,00:02:44.860,00:02:50.020,辉英,,0,0,0,,Yeah, so that would be the Mitt onwards.
Dialogue: 0,00:02:50.020,00:02:53.000,辉英,,0,0,0,,M attempting to create a line across a picture over the strictly jon lecturer in class.
Dialogue: 0,00:02:53.000,00:02:54.020,辉英,,0,0,0,,What's the%?
Dialogue: 0,00:02:54.020,00:02:59.500,辉英,,0,0,0,,We are restricting the approximation in different space of functions.
Dialogue: 0,00:03:00.820,00:03:05.820,辉英,,0,0,0,,In the previous case, we require our representation to be continuous.
Dialogue: 0,00:03:06.920,00:03:14.580,辉英,,0,0,0,,In this case, we no longer require our function to be continuous, but we are still doing these squares.
Dialogue: 0,00:03:14.580,00:03:25.580,辉英,,0,0,0,,And in this case, because we are allowing ourselves to minimize the distance between the original and approximation function over a bigger space,
Dialogue: 0,00:03:25.920,00:03:28.580,辉英,,0,0,0,,because we no longer require it to be continuous,
Dialogue: 0,00:03:28.840,00:03:34.540,辉英,,0,0,0,,we can get a better approximation of the function, potentially.
Dialogue: 0,00:03:35.520,00:03:42.460,辉英,,0,0,0,,We are minimizing the distance between the approximate function and the original function.
Dialogue: 0,00:03:42.460,00:03:44.560,辉英,,0,0,0,,And you can see that the approximation function is still doing the same thing.
Dialogue: 0,00:03:44.560,00:03:44.580,辉英,,0,0,0,,And you can see that the approximation function is still doing the same thing.
Dialogue: 0,00:03:44.580,00:03:50.720,辉英,,0,0,0,,And you can think of the previous example as performing that minimization under some constraint,
Dialogue: 0,00:03:51.020,00:03:56.200,辉英,,0,0,0,,while this is performing the same optimization without these constraints.
Dialogue: 0,00:03:57.160,00:04:04.800,辉英,,0,0,0,,And of course, without the constraint, potentially, you can get a better, smaller objective function in your minimization.
Dialogue: 0,00:04:05.080,00:04:07.400,辉英,,0,0,0,,So you can approximate the function slightly better.
Dialogue: 0,00:04:09.700,00:04:14.020,辉英,,0,0,0,,Of course, another way to get a richer space or a bigger space
Dialogue: 0,00:04:14.020,00:04:18.680,辉英,,0,0,0,,is just to divide every cell by a factor of two.
Dialogue: 0,00:04:20.460,00:04:28.100,辉英,,0,0,0,,Any function that is piecewise linear in the bigger, in the coarser discretization
Dialogue: 0,00:04:28.560,00:04:33.220,辉英,,0,0,0,,is going to be a piecewise linear function in the finer discretization.
Dialogue: 0,00:04:34.600,00:04:37.600,辉英,,0,0,0,,But the finer discretization has a richer space
Dialogue: 0,00:04:38.600,00:04:44.000,辉英,,0,0,0,,because there are more functions that does not live in the original coarser space.
Dialogue: 0,00:04:44.280,00:05:01.260,辉英,,0,0,0,,So should you move the division by
Dialogue: 0,00:05:02.360,00:05:03.120,辉英,,0,0,0,,character質
Dialogue: 0,00:05:03.120,00:05:03.300,辉英,,0,0,0,,and
Dialogue: 0,00:05:03.300,00:05:03.660,辉英,,0,0,0,,cause
Dialogue: 0,00:05:03.660,00:05:04.680,辉英,,0,0,0,,Arctic
Dialogue: 0,00:05:04.680,00:05:05.280,辉英,,0,0,0,,is
Dialogue: 0,00:05:05.280,00:05:05.900,辉英,,0,0,0,,확
Dialogue: 0,00:05:05.900,00:05:06.420,辉英,,0,0,0,,natural
Dialogue: 0,00:05:06.460,00:05:07.080,辉英,,0,0,0,,equal
Dialogue: 0,00:05:07.080,00:05:07.740,辉英,,0,0,0,,r
Dialogue: 0,00:05:07.740,00:05:07.940,辉英,,0,0,0,,with
Dialogue: 0,00:05:07.940,00:05:12.560,辉英,,0,0,0,,an
Dialogue: 0,00:05:12.560,00:05:12.900,辉英,,0,0,0,,program
Dialogue: 0,00:05:12.900,00:05:13.380,辉英,,0,0,0,,for
Dialogue: 0,00:05:13.380,00:05:13.620,辉英,,0,0,0,,and
Dialogue: 0,00:05:13.620,00:05:14.000,辉英,,0,0,0,,with
