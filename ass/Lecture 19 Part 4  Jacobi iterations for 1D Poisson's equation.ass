[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1080
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 辉英,Tahoma,35,&H00FFFFFF,&H000000FF,&H003B3C3D,&H00000000,0,0,0,0,70,70,1,0,1,1.3,0.2,2,0,0,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,00:00:00.000,00:00:08.000,辉英,,0,0,0,,Okay, now let's take a look at how do we do this for finite, for an example equation.
Dialogue: 0,00:00:08.500,00:00:12.260,辉英,,0,0,0,,Okay, and so let's first look at finite difference.
Dialogue: 0,00:00:15.240,00:00:23.120,辉英,,0,0,0,,Let's look at a finite difference approximation to the one-dimensional and two-dimensional Poisson's equation.
Dialogue: 0,00:00:23.120,00:00:26.560,辉英,,0,0,0,,So one-dimensional Poisson's equation would be this.
Dialogue: 0,00:00:26.560,00:00:41.300,辉英,,0,0,0,,And after we discretize it, we have ui plus 1 minus 2ui plus ui minus 1 divided by delta x squared equal to f of i.
Dialogue: 0,00:00:43.440,00:00:49.660,辉英,,0,0,0,,Okay, so let's just look at this equation.
Dialogue: 0,00:00:49.660,00:00:55.040,辉英,,0,0,0,,Can we already tell which term corresponds to the lower diagonal part,
Dialogue: 0,00:00:55.140,00:00:56.540,辉英,,0,0,0,,which term corresponds to the diagonal?
Dialogue: 0,00:00:56.560,00:00:59.900,辉英,,0,0,0,,Which term corresponds to the diagonal part and which term corresponds to the upper diagonal part?
Dialogue: 0,00:01:02.940,00:01:03.640,辉英,,0,0,0,,Can we?
Dialogue: 0,00:01:04.260,00:01:06.280,辉英,,0,0,0,,So the first term is lower or upper?
Dialogue: 0,00:01:09.900,00:01:10.840,辉英,,0,0,0,,Upper, right.
Dialogue: 0,00:01:11.080,00:01:11.860,辉英,,0,0,0,,So this is u.
Dialogue: 0,00:01:12.160,00:01:13.020,辉英,,0,0,0,,How about this term?
Dialogue: 0,00:01:14.760,00:01:16.200,辉英,,0,0,0,,It's the diagonal part.
Dialogue: 0,00:01:16.400,00:01:20.060,辉英,,0,0,0,,So we are lucky that for all the i's, the diagonal term is non-zero.
Dialogue: 0,00:01:20.460,00:01:22.900,辉英,,0,0,0,,So Jacobi iteration is applicable.
Dialogue: 0,00:01:22.900,00:01:23.860,辉英,,0,0,0,,How about this one?
Dialogue: 0,00:01:25.040,00:01:26.540,辉英,,0,0,0,,This is going to be lower diagonal part.
Dialogue: 0,00:01:26.680,00:01:27.480,辉英,,0,0,0,,Right?
Dialogue: 0,00:01:28.340,00:01:33.680,辉英,,0,0,0,,So even without constructing the matrix, we can already apply the Jacobi iteration method
Dialogue: 0,00:01:33.680,00:01:38.040,辉英,,0,0,0,,by moving all these terms into different sides.
Dialogue: 0,00:01:38.520,00:01:42.000,辉英,,0,0,0,,And of course, this corresponds to the b in our equation.
Dialogue: 0,00:01:42.260,00:01:47.620,辉英,,0,0,0,,So let's keep the d term on the left-hand side and move all the other terms to the right-hand side.
Dialogue: 0,00:01:48.340,00:01:56.440,辉英,,0,0,0,,What we have is minus 2 over delta x squared times ui is equal to fi.
Dialogue: 0,00:01:56.560,00:02:07.340,辉英,,0,0,0,,Minus ui plus 1 over delta x squared minus ui minus 1 over delta x squared.
Dialogue: 0,00:02:09.040,00:02:09.800,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:10.740,00:02:18.200,辉英,,0,0,0,,Jacobi iteration method, what we do is we keep the diagonal part to be an unknown
Dialogue: 0,00:02:18.200,00:02:22.580,辉英,,0,0,0,,and the lower and upper diagonal part to be known.
Dialogue: 0,00:02:22.580,00:02:26.040,辉英,,0,0,0,,So these are index k and ui.
Dialogue: 0,00:02:26.040,00:02:28.300,辉英,,0,0,0,,The diagonal part is index k plus 1.
Dialogue: 0,00:02:31.000,00:02:33.800,辉英,,0,0,0,,So this is going to be our iteration.
Dialogue: 0,00:02:34.660,00:02:35.040,辉英,,0,0,0,,Right?
