[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1080
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 辉英,Tahoma,35,&H00FFFFFF,&H000000FF,&H003B3C3D,&H00000000,0,0,0,0,70,70,1,0,1,1.3,0.2,2,0,0,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,00:00:00.000,00:00:07.280,辉英,,0,0,0,,Alright, so find a difference approximation of the 2D Poisson's operator,
Dialogue: 0,00:00:07.280,00:00:12.160,辉英,,0,0,0,,the 2D Laplace operator. The Laplace operator is basically the partial
Dialogue: 0,00:00:12.160,00:00:19.880,辉英,,0,0,0,,square over partial x square plus partial square over partial y square. It
Dialogue: 0,00:00:19.880,00:00:26.920,辉英,,0,0,0,,appears a lot in mathematics, particularly in differential equations.
Dialogue: 0,00:00:26.920,00:00:35.560,辉英,,0,0,0,,So this is just a summation of two one-dimensional differential operators.
Dialogue: 0,00:00:35.560,00:00:44.080,辉英,,0,0,0,,The first dimension is in x, the second dimension is y, right? And remember in the
Dialogue: 0,00:00:44.080,00:00:49.860,辉英,,0,0,0,,1D case, the second derivative of u can
Dialogue: 0,00:00:49.860,00:00:56.840,辉英,,0,0,0,,be approximated by u of i plus 1 plus u such as i minus 1 plus 2u x divided by
Dialogue: 0,00:00:56.840,00:01:05.480,辉英,,0,0,0,,delta x squared, and we used Taylor's series analysis to either derive this or
Dialogue: 0,00:01:05.480,00:01:12.700,辉英,,0,0,0,,analyze its order of accuracy, and just to remind order of accuracy means as
Dialogue: 0,00:01:12.700,00:01:19.480,辉英,,0,0,0,,Delta x goes to zero how fast does the area of this approximation go to zero.
Dialogue: 0,00:01:19.480,00:01:23.920,辉英,,0,0,0,,and do we remember what is the order of accuracy of this scheme?
Dialogue: 0,00:01:27.740,00:01:30.680,辉英,,0,0,0,,It's second order, which means the truncation error,
Dialogue: 0,00:01:30.780,00:01:32.200,辉英,,0,0,0,,the error of this approximation,
Dialogue: 0,00:01:33.000,00:01:36.020,辉英,,0,0,0,,scales like delta x squared.
Dialogue: 0,00:01:38.040,00:01:41.340,辉英,,0,0,0,,If it scales like delta x, it's called first order.
Dialogue: 0,00:01:41.820,00:01:44.860,辉英,,0,0,0,,If it scales like delta x cubed, it's called third order.
Dialogue: 0,00:01:45.960,00:01:48.360,辉英,,0,0,0,,All right, so this operator is second order.
Dialogue: 0,00:01:48.360,00:01:51.200,辉英,,0,0,0,,The truncation error, left minus right,
Dialogue: 0,00:01:51.800,00:01:54.020,辉英,,0,0,0,,scales with delta x squared,
Dialogue: 0,00:01:54.680,00:01:56.380,辉英,,0,0,0,,a constant times delta x squared.
Dialogue: 0,00:01:57.720,00:02:00.620,辉英,,0,0,0,,Now in 2D, we can do the same thing.
Dialogue: 0,00:02:04.800,00:02:07.840,辉英,,0,0,0,,Okay, we can do the same thing.
Dialogue: 0,00:02:12.860,00:02:15.880,辉英,,0,0,0,,The partial square u, partial x squared,
Dialogue: 0,00:02:16.880,00:02:18.340,辉英,,0,0,0,,plus partial square u,
Dialogue: 0,00:02:18.500,00:02:19.780,辉英,,0,0,0,,partial y squared.
Dialogue: 0,00:02:20.420,00:02:22.740,辉英,,0,0,0,,Now we have more than the index i.
Dialogue: 0,00:02:23.180,00:02:27.540,辉英,,0,0,0,,We have ui plus 1 and j
Dialogue: 0,00:02:27.540,00:02:30.580,辉英,,0,0,0,,plus ui minus 1 and j.
Dialogue: 0,00:02:30.780,00:02:34.240,辉英,,0,0,0,,So they are taking the finite difference operator
Dialogue: 0,00:02:34.240,00:02:38.820,辉英,,0,0,0,,at the same j to approximate the x derivative.
Dialogue: 0,00:02:40.160,00:02:40.320,辉英,,0,0,0,,Okay.
Dialogue: 0,00:02:41.620,00:02:44.700,辉英,,0,0,0,,And we also add this up with
Dialogue: 0,00:02:44.700,00:02:47.660,辉英,,0,0,0,,ui of j plus 1 plus ui of y plus 1.
Dialogue: 0,00:02:48.360,00:02:53.620,辉英,,0,0,0,,So we have ui of j minus 1 minus 2 uij divided by now delta y squared,
Dialogue: 0,00:02:54.440,00:03:00.460,辉英,,0,0,0,,where delta x is the distance between two adjacent x grid points.
Dialogue: 0,00:03:01.280,00:03:05.820,辉英,,0,0,0,,And delta y is the distance between two adjacent y grid points.
Dialogue: 0,00:03:08.300,00:03:09.240,辉英,,0,0,0,,All right.
Dialogue: 0,00:03:11.460,00:03:15.140,辉英,,0,0,0,,So now we have an approximation to this operator.
Dialogue: 0,00:03:15.140,00:03:15.260,辉英,,0,0,0,,So,
Dialogue: 0,00:03:15.260,00:03:18.180,辉英,,0,0,0,,if,
Dialogue: 0,00:03:18.360,00:03:19.980,辉英,,0,0,0,,I have the Poisson's equation,
Dialogue: 0,00:03:20.100,00:03:21.920,辉英,,0,0,0,,which means this is equal to f.
Dialogue: 0,00:03:23.580,00:03:24.100,辉英,,0,0,0,,Okay.
Dialogue: 0,00:03:24.520,00:03:25.380,辉英,,0,0,0,,That means,
Dialogue: 0,00:03:25.540,00:03:26.500,辉英,,0,0,0,,let me write approximation.
Dialogue: 0,00:03:26.500,00:03:33.860,辉英,,0,0,0,,That means this finite difference operator can be equalized to f of ij.
Dialogue: 0,00:03:38.860,00:03:40.520,辉英,,0,0,0,,So this equation,
Dialogue: 0,00:03:41.700,00:03:42.660,辉英,,0,0,0,,which means,
Dialogue: 0,00:03:43.120,00:03:43.320,辉英,,0,0,0,,which,
Dialogue: 0,00:03:43.900,00:03:47.500,辉英,,0,0,0,,which is written out as a linear combination of,
Dialogue: 0,00:03:48.360,00:03:56.540,辉英,,0,0,0,,of five different values of u at five grid points is equal to fij.
Dialogue: 0,00:03:58.260,00:03:59.820,辉英,,0,0,0,,So let's say this is,
Dialogue: 0,00:04:00.600,00:04:03.860,辉英,,0,0,0,,if this is ij under consideration,
Dialogue: 0,00:04:04.920,00:04:05.400,辉英,,0,0,0,,okay,
Dialogue: 0,00:04:07.060,00:04:14.400,辉英,,0,0,0,,the value of f at these grid points is equal to a linear combination of ui plus 1j,
Dialogue: 0,00:04:14.620,00:04:16.120,辉英,,0,0,0,,which is this point.
Dialogue: 0,00:04:16.420,00:04:18.160,辉英,,0,0,0,,This is ui plus 1j.
Dialogue: 0,00:04:18.360,00:04:21.380,辉英,,0,0,0,,Right?
Dialogue: 0,00:04:22.200,00:04:23.600,辉英,,0,0,0,,Ui minus 1j,
Dialogue: 0,00:04:23.800,00:04:27.440,辉英,,0,0,0,,these grid points minus two uij.
Dialogue: 0,00:04:27.440,00:04:30.560,辉英,,0,0,0,,So this grid points and uij plus one,
Dialogue: 0,00:04:30.560,00:04:31.300,辉英,,0,0,0,,that's here.
Dialogue: 0,00:04:31.640,00:04:33.260,辉英,,0,0,0,,Uij minus one,
Dialogue: 0,00:04:33.260,00:04:33.980,辉英,,0,0,0,,that's here.
Dialogue: 0,00:04:34.180,00:04:35.860,辉英,,0,0,0,,And uij again is here.
Dialogue: 0,00:04:37.600,00:04:38.900,辉英,,0,0,0,,So we have five,
Dialogue: 0,00:04:40.660,00:04:46.880,辉英,,0,0,0,,we have five grid points and five different coefficients to multiply with the u at these grid points.
Dialogue: 0,00:04:47.620,00:04:48.240,辉英,,0,0,0,,Add them together,
Dialogue: 0,00:04:48.240,00:04:48.340,辉英,,0,0,0,,Add them together,
Dialogue: 0,00:04:48.340,00:04:54.340,辉英,,0,0,0,,they should equal to F at the center grid points. And the same equation should
Dialogue: 0,00:04:54.340,00:05:05.500,辉英,,0,0,0,,apply to every single interior grid point, right? So if we have nx minus 1
Dialogue: 0,00:05:05.500,00:05:12.280,辉英,,0,0,0,,interior grid points in X, we have n y minus 1 interior grid points in Y. This
Dialogue: 0,00:05:12.280,00:05:19.280,辉英,,0,0,0,,is not a single equation. This is nx minus 1 times n y minus 1 equations.
Dialogue: 0,00:05:19.280,00:05:28.540,辉英,,0,0,0,,Okay? Again, how many unknowns do we have? If we know the boundary conditions u of i,
Dialogue: 0,00:05:28.540,00:05:41.020,辉英,,0,0,0,,j equal to 0, if i is equal to 0, or i is equal to nx, or j is equal to 0, or j is
Dialogue: 0,00:05:41.020,00:05:42.020,辉英,,0,0,0,,equal to ny.
Dialogue: 0,00:05:42.020,00:05:42.120,辉英,,0,0,0,,Okay?
Dialogue: 0,00:05:42.280,00:05:46.180,辉英,,0,0,0,,So if we have this boundary condition, the simplest type of boundary condition,
Dialogue: 0,00:05:46.340,00:05:48.360,辉英,,0,0,0,,how many unknowns do we have?
Dialogue: 0,00:05:54.860,00:06:06.260,辉英,,0,0,0,,Exactly. So this gives us nx minus 1 times n y minus 1 equations for the same
Dialogue: 0,00:06:06.260,00:06:08.220,辉英,,0,0,0,,number of unknowns.
Dialogue: 0,00:06:12.280,00:06:20.100,辉英,,0,0,0,,Okay? And all these equations are linear equations, right? So by this finite difference
Dialogue: 0,00:06:20.100,00:06:25.880,辉英,,0,0,0,,approximation of the 2D Laplace operator, we converted the partial differential equation
Dialogue: 0,00:06:25.880,00:06:32.240,辉英,,0,0,0,,into a set of linear equations that uniquely, that combines with the boundary condition,
Dialogue: 0,00:06:32.240,00:06:36.080,辉英,,0,0,0,,I need to say, uniquely determines the numerical solution.
