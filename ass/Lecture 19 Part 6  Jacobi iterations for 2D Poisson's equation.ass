[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1080
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 辉英,Tahoma,35,&H00FFFFFF,&H000000FF,&H003B3C3D,&H00000000,0,0,0,0,70,70,1,0,1,1.3,0.2,2,0,0,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,00:00:00.000,00:00:07.200,辉英,,0,0,0,,So another example let's give is Jacobi iteration in two dimensions.
Dialogue: 0,00:00:07.200,00:00:12.320,辉英,,0,0,0,,So let's try a two-dimensional matrix and do another exercise to figure out
Dialogue: 0,00:00:12.320,00:00:18.240,辉英,,0,0,0,,what the iteration would look like. So the two-dimensional Poisson's equation
Dialogue: 0,00:00:18.240,00:00:32.240,辉英,,0,0,0,,would look like U plus U plus U plus U
Dialogue: 0,00:00:32.240,00:00:42.960,辉英,,0,0,0,,plus U minus in this case we have 4 times U
Dialogue: 0,00:00:42.960,00:00:47.760,辉英,,0,0,0,,because we have derivative in both i and j directions and the delta
Dialogue: 0,00:00:47.760,00:00:48.240,辉英,,0,0,0,,squared.
Dialogue: 0,00:00:48.240,00:00:51.360,辉英,,0,0,0,,So delta here, let's say, let's put delta x.
Dialogue: 0,00:00:51.700,00:00:55.720,辉英,,0,0,0,,So the assumption here is delta x equal to delta y, right?
Dialogue: 0,00:00:55.800,00:00:57.540,辉英,,0,0,0,,Otherwise, we have different coefficients.
Dialogue: 0,00:00:58.920,00:01:00.760,辉英,,0,0,0,,This is equal to Fij.
Dialogue: 0,00:01:04.420,00:01:04.980,辉英,,0,0,0,,Okay.
Dialogue: 0,00:01:06.720,00:01:12.320,辉英,,0,0,0,,And here, can we identify what are the lower diagonal parts and what are the upper diagonal parts?
Dialogue: 0,00:01:14.260,00:01:17.600,辉英,,0,0,0,,It depends on how I order the vector.
Dialogue: 0,00:01:18.240,00:01:18.560,辉英,,0,0,0,,Right.
Dialogue: 0,00:01:19.340,00:01:26.980,辉英,,0,0,0,,But in Jacobi iterations, it actually doesn't matter which part is lower diagonal, which part is upper diagonal.
Dialogue: 0,00:01:27.660,00:01:28.100,辉英,,0,0,0,,Why?
Dialogue: 0,00:01:28.100,00:01:28.160,辉英,,0,0,0,,Why?
Dialogue: 0,00:01:30.460,00:01:33.340,辉英,,0,0,0,,Because they are all moved towards the right-hand side.
Dialogue: 0,00:01:34.540,00:01:36.640,辉英,,0,0,0,,And only what is left on the left-hand side?
Dialogue: 0,00:01:38.280,00:01:39.580,辉英,,0,0,0,,The diagonal part.
Dialogue: 0,00:01:40.300,00:01:40.520,辉英,,0,0,0,,Right.
Dialogue: 0,00:01:40.680,00:01:42.920,辉英,,0,0,0,,So let's just pick out the diagonal part.
Dialogue: 0,00:01:44.040,00:01:46.200,辉英,,0,0,0,,This one is diagonal part.
Dialogue: 0,00:01:46.560,00:01:48.100,辉英,,0,0,0,,And everything else goes towards...
Dialogue: 0,00:01:48.240,00:01:49.080,辉英,,0,0,0,,Towards the right-hand side.
Dialogue: 0,00:01:49.980,00:01:55.100,辉英,,0,0,0,,So what we have is Uij.
Dialogue: 0,00:01:55.980,00:02:02.960,辉英,,0,0,0,,And let's also divide both sides by 4, like minus 4 over delta x.
Dialogue: 0,00:02:03.280,00:02:10.060,辉英,,0,0,0,,This would be equal to minus delta x squared over 4 times Fij.
Dialogue: 0,00:02:10.060,00:02:18.060,辉英,,0,0,0,,And then the rest is plus Ui plus 1j plus Ui minus 1j.
Dialogue: 0,00:02:18.240,00:02:21.340,辉英,,0,0,0,,Uij plus 1j plus Uij minus 1.
Dialogue: 0,00:02:22.140,00:02:23.660,辉英,,0,0,0,,Uij plus 1.
Dialogue: 0,00:02:23.900,00:02:25.740,辉英,,0,0,0,,The whole thing divided by 4.
Dialogue: 0,00:02:27.040,00:02:27.320,辉英,,0,0,0,,Right.
Dialogue: 0,00:02:29.220,00:02:32.340,辉英,,0,0,0,,So now look at the similarity.
Dialogue: 0,00:02:32.940,00:02:35.820,辉英,,0,0,0,,So previously we have this form and now we have this form.
Dialogue: 0,00:02:36.220,00:02:42.040,辉英,,0,0,0,,It seems like my Uij for the next iteration, k plus 1,
Dialogue: 0,00:02:44.940,00:02:47.980,辉英,,0,0,0,,is some contribution from the...
Dialogue: 0,00:02:48.240,00:02:52.840,辉英,,0,0,0,,Right-hand side of the matrix plus some kind of average.
Dialogue: 0,00:02:52.840,00:02:53.340,辉英,,0,0,0,,Right.
Dialogue: 0,00:02:53.340,00:02:57.140,辉英,,0,0,0,,In previously just divided by 2, now divided by 4.
Dialogue: 0,00:02:57.140,00:03:00.940,辉英,,0,0,0,,An average of the 4 nearby entries.
Dialogue: 0,00:03:02.940,00:03:08.240,辉英,,0,0,0,,So this is, in some sense, characteristic of the Poisson's equation.
Dialogue: 0,00:03:08.240,00:03:11.940,辉英,,0,0,0,,Because the Poisson's equation, you get a smooth solution.
Dialogue: 0,00:03:11.940,00:03:17.940,辉英,,0,0,0,,The solution is a slight contribution from the...
Dialogue: 0,00:03:17.940,00:03:20.840,辉英,,0,0,0,,Right-hand side, which is on the order of delta x squared,
Dialogue: 0,00:03:20.840,00:03:24.340,辉英,,0,0,0,,plus an average of the nearby solutions.
Dialogue: 0,00:03:24.340,00:03:30.540,辉英,,0,0,0,,This is what gives a smooth solution that has a curvature equal to what you want it to be.
Dialogue: 0,00:03:30.540,00:03:32.540,辉英,,0,0,0,,Alright.
Dialogue: 0,00:03:32.540,00:03:42.540,辉英,,0,0,0,,So going back to MATLAB and let's make it a little bit cleaner by giving a script.
Dialogue: 0,00:03:42.540,00:03:46.540,辉英,,0,0,0,,jacobi Poisson.
Dialogue: 0,00:03:47.940,00:03:49.740,辉英,,0,0,0,,2D.
Dialogue: 0,00:03:49.740,00:03:50.540,辉英,,0,0,0,,Okay.
Dialogue: 0,00:03:50.540,00:03:54.540,辉英,,0,0,0,,So to start, we are going to...
Dialogue: 0,00:03:54.540,00:04:01.240,辉英,,0,0,0,,Actually, let's also use this opportunity to look at an interesting phenomenon,
Dialogue: 0,00:04:01.240,00:04:06.240,辉英,,0,0,0,,like how the error reduces in Poisson's equation, in jacobi iteration.
Dialogue: 0,00:04:06.240,00:04:08.940,辉英,,0,0,0,,So let's use a picture over here.
Dialogue: 0,00:04:08.940,00:04:13.540,辉英,,0,0,0,,So the picture is a little bit of...
Dialogue: 0,00:04:13.540,00:04:15.540,辉英,,0,0,0,,There is an interesting story about this.
Dialogue: 0,00:04:15.540,00:04:17.640,辉英,,0,0,0,,If you look at this...
Dialogue: 0,00:04:17.940,00:04:23.940,辉英,,0,0,0,,If I want to open it outside MATLAB...
Dialogue: 0,00:04:23.940,00:04:29.940,辉英,,0,0,0,,So this is the picture we want to use as the solution to our Poisson's equation.
Dialogue: 0,00:04:29.940,00:04:33.940,辉英,,0,0,0,,It's kind of a standard test case picture in image processing.
Dialogue: 0,00:04:33.940,00:04:36.940,辉英,,0,0,0,,So let's just use this one.
Dialogue: 0,00:04:36.940,00:04:40.940,辉英,,0,0,0,,So what we have is an error using your import.
Dialogue: 0,00:04:40.940,00:04:41.940,辉英,,0,0,0,,No.
Dialogue: 0,00:04:41.940,00:04:45.940,辉英,,0,0,0,,We want to do import wizard.
Dialogue: 0,00:04:45.940,00:04:46.940,辉英,,0,0,0,,Ah...
Dialogue: 0,00:04:47.940,00:04:52.940,辉英,,0,0,0,,This is 128 by 128.
Dialogue: 0,00:04:52.940,00:04:53.940,辉英,,0,0,0,,Uint8.
Dialogue: 0,00:04:53.940,00:04:57.940,辉英,,0,0,0,,So let's create variable matching preview.
Dialogue: 0,00:04:57.940,00:04:58.940,辉英,,0,0,0,,Finish.
Dialogue: 0,00:04:58.940,00:05:01.940,辉英,,0,0,0,,So we just loaded the matrix into memory.
Dialogue: 0,00:05:01.940,00:05:06.940,辉英,,0,0,0,,The matrix is called the LNBW.
Dialogue: 0,00:05:06.940,00:05:08.940,辉英,,0,0,0,,So let's say uexact.
Dialogue: 0,00:05:08.940,00:05:14.940,辉英,,0,0,0,,We want to construct a Poisson's equation whose exact solution is what we just loaded.
Dialogue: 0,00:05:14.940,00:05:15.940,辉英,,0,0,0,,So it's a matrix.
Dialogue: 0,00:05:15.940,00:05:21.940,辉英,,0,0,0,,So it's a matrix 128 by 128 by 3.
Dialogue: 0,00:05:21.940,00:05:23.940,辉英,,0,0,0,,But we don't want the color.
Dialogue: 0,00:05:23.940,00:05:25.940,辉英,,0,0,0,,So we'll just take the first entry.
Dialogue: 0,00:05:25.940,00:05:26.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:05:26.940,00:05:28.940,辉英,,0,0,0,,So if I run it...
Dialogue: 0,00:05:28.940,00:05:30.940,辉英,,0,0,0,,And let's...
Dialogue: 0,00:05:30.940,00:05:36.940,辉英,,0,0,0,,I am sure it is visualizing uexact.
Dialogue: 0,00:05:36.940,00:05:42.940,辉英,,0,0,0,,So that's our variable now.
Dialogue: 0,00:05:42.940,00:05:43.940,辉英,,0,0,0,,Okay. So we are good.
Dialogue: 0,00:05:43.940,00:05:51.940,辉英,,0,0,0,,So with that uexact, and let's assume a zero boundary condition, let's construct a right-hand side.
Dialogue: 0,00:05:51.940,00:05:54.940,辉英,,0,0,0,,That is going to give us this solution.
Dialogue: 0,00:05:54.940,00:05:55.940,辉英,,0,0,0,,Right?
Dialogue: 0,00:05:55.940,00:06:03.940,辉英,,0,0,0,,This is a method of manufactured solution that is used also in PDs when you try to validate your solver, look for convergence.
Dialogue: 0,00:06:03.940,00:06:12.940,辉英,,0,0,0,,So you manufacture a solution and construct the right-hand side so that the solution you have is the solution you expect to get.
Dialogue: 0,00:06:12.940,00:06:19.940,辉英,,0,0,0,,So my b would be equal to zeros.
Dialogue: 0,00:06:19.940,00:06:22.940,辉英,,0,0,0,,So the shape...
Dialogue: 0,00:06:22.940,00:06:24.940,辉英,,0,0,0,,Well, I would just say 128.
Dialogue: 0,00:06:24.940,00:06:27.940,辉英,,0,0,0,,That's something we know.
Dialogue: 0,00:06:27.940,00:06:29.940,辉英,,0,0,0,,And okay.
Dialogue: 0,00:06:29.940,00:06:38.940,辉英,,0,0,0,,So I think I also want to make uexact to be float of uexact.
Dialogue: 0,00:06:38.940,00:06:41.940,辉英,,0,0,0,,Otherwise, my uexact is going to be integers.
Dialogue: 0,00:06:41.940,00:06:43.940,辉英,,0,0,0,,So let's run this.
Dialogue: 0,00:06:43.940,00:06:47.940,辉英,,0,0,0,,So my uexact...
Dialogue: 0,00:06:47.940,00:06:51.940,辉英,,0,0,0,,Okay. I think I need to be doing double.
Dialogue: 0,00:06:51.940,00:06:53.940,辉英,,0,0,0,,Okay. So now that works.
Dialogue: 0,00:06:53.940,00:06:58.940,辉英,,0,0,0,,My uexact is going to be containing now...
Dialogue: 0,00:06:58.940,00:07:01.940,辉英,,0,0,0,,They are still integers, but the type is now double.
Dialogue: 0,00:07:01.940,00:07:02.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:07:02.940,00:07:04.940,辉英,,0,0,0,,So my b is equal to that.
Dialogue: 0,00:07:04.940,00:07:10.940,辉英,,0,0,0,,And let's put my delta x to be 1 over 128 plus 1.
Dialogue: 0,00:07:10.940,00:07:13.940,辉英,,0,0,0,,So that will be my grid spacing.
Dialogue: 0,00:07:13.940,00:07:19.940,辉英,,0,0,0,,So what I then have is my b...
Dialogue: 0,00:07:19.940,00:07:23.940,辉英,,0,0,0,,Okay. For i goes 1 to 128.
Dialogue: 0,00:07:23.940,00:07:26.940,辉英,,0,0,0,,For j goes 1 to 128.
Dialogue: 0,00:07:26.940,00:07:30.940,辉英,,0,0,0,,My bij is going to be...
Dialogue: 0,00:07:30.940,00:07:32.940,辉英,,0,0,0,,Okay. So let's here make a trick.
Dialogue: 0,00:07:32.940,00:07:36.940,辉英,,0,0,0,,So let's here make a u expanded.
Dialogue: 0,00:07:36.940,00:07:39.940,辉英,,0,0,0,,Also, which is a u including the boundaries.
Dialogue: 0,00:07:39.940,00:07:42.940,辉英,,0,0,0,,It will be zeros, 1, 30.
Dialogue: 0,00:07:42.940,00:07:43.940,辉英,,0,0,0,,So I'm adding...
Dialogue: 0,00:07:43.940,00:07:46.940,辉英,,0,0,0,,I'm padding some zeros on all the boundaries.
Dialogue: 0,00:07:46.940,00:07:48.940,辉英,,0,0,0,,So that makes my...
Dialogue: 0,00:07:48.940,00:07:52.940,辉英,,0,0,0,,So that I avoid a bunch of if statements in computing b.
Dialogue: 0,00:07:52.940,00:07:58.940,辉英,,0,0,0,,And u expanded would be 2 to n minus 1.
Dialogue: 0,00:07:58.940,00:08:02.940,辉英,,0,0,0,,2 to n minus 1 would be assigned to uexact.
Dialogue: 0,00:08:02.940,00:08:03.940,辉英,,0,0,0,,All right.
Dialogue: 0,00:08:03.940,00:08:08.940,辉英,,0,0,0,,So that's a proper way of putting the boundary conditions.
Dialogue: 0,00:08:08.940,00:08:23.940,辉英,,0,0,0,,So b of i, j would be equal to u expanded i, j plus 1.
Dialogue: 0,00:08:23.940,00:08:27.940,辉英,,0,0,0,,So all the indices are going to be shifted by a little bit.
Dialogue: 0,00:08:27.940,00:08:28.940,辉英,,0,0,0,,So okay.
Dialogue: 0,00:08:28.940,00:08:32.940,辉英,,0,0,0,,So if we don't want to be shifted, we can make b equal to zeros, 1, 30.
Dialogue: 0,00:08:32.940,00:08:36.940,辉英,,0,0,0,,And then our i is going to be going...
Dialogue: 0,00:08:36.940,00:08:37.940,辉英,,0,0,0,,i and j are both...
Dialogue: 0,00:08:37.940,00:08:38.940,辉英,,0,0,0,,Both are going to...
Dialogue: 0,00:08:38.940,00:08:40.940,辉英,,0,0,0,,Going from 2 to 129.
Dialogue: 0,00:08:40.940,00:08:41.940,辉英,,0,0,0,,Right.
Dialogue: 0,00:08:41.940,00:08:43.940,辉英,,0,0,0,,So we are iterating over the interior grids.
Dialogue: 0,00:08:43.940,00:08:56.940,辉英,,0,0,0,,So aij is going to be u expanded i plus 1, j plus dot, dot, dot.
Dialogue: 0,00:08:56.940,00:08:59.940,辉英,,0,0,0,,u expanded i minus 1, j.
Dialogue: 0,00:09:07.940,00:09:16.940,辉英,,0,0,0,,Expanded i and j plus 1.
Dialogue: 0,00:09:16.940,00:09:18.940,辉英,,0,0,0,,Copy and paste.
Dialogue: 0,00:09:18.940,00:09:19.940,辉英,,0,0,0,,j minus 1.
Dialogue: 0,00:09:19.940,00:09:27.940,辉英,,0,0,0,,Lastly, we want to minus 4 times u of i, j.
Dialogue: 0,00:09:27.940,00:09:28.940,辉英,,0,0,0,,i, j.
Dialogue: 0,00:09:28.940,00:09:35.940,辉英,,0,0,0,,The whole thing should be divided by delta x squared.
Dialogue: 0,00:09:35.940,00:09:36.940,辉英,,0,0,0,,Right.
Dialogue: 0,00:09:36.940,00:09:37.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:09:37.940,00:09:46.940,辉英,,0,0,0,,So that way we compute the b that is required to make u exact the solution.
Dialogue: 0,00:09:46.940,00:09:47.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:09:47.940,00:09:49.940,辉英,,0,0,0,,So now let's run it.
Dialogue: 0,00:09:49.940,00:09:52.940,辉英,,0,0,0,,It does give us what we want.
Dialogue: 0,00:09:52.940,00:09:59.940,辉英,,0,0,0,,So if i am show the b, that will be something we don't understand.
Dialogue: 0,00:09:59.940,00:10:04.940,辉英,,0,0,0,,But it is the right-hand side that is supposed to give us the exact solution.
Dialogue: 0,00:10:04.940,00:10:05.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:10:05.940,00:10:06.940,辉英,,0,0,0,,So let's apply...
Dialogue: 0,00:10:06.940,00:10:09.940,辉英,,0,0,0,,So now let's apply the Jacobi iteration method to solve for b.
Dialogue: 0,00:10:09.940,00:10:10.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:10:10.940,00:10:15.940,辉英,,0,0,0,,So initially let's make u that is equal to zeros, 130, 130.
Dialogue: 0,00:10:15.940,00:10:20.940,辉英,,0,0,0,,So it's okay to include also the boundary conditions because we know it is what it is.
Dialogue: 0,00:10:20.940,00:10:24.940,辉英,,0,0,0,,So let's start with the u that has the correct boundary condition.
Dialogue: 0,00:10:24.940,00:10:27.940,辉英,,0,0,0,,So we have the u that is equal to 0.
Dialogue: 0,00:10:27.940,00:10:29.940,辉英,,0,0,0,,And we have the u that is equal to 0.
Dialogue: 0,00:10:29.940,00:10:31.940,辉英,,0,0,0,,So we have the u that is equal to 0.
Dialogue: 0,00:10:31.940,00:10:33.940,辉英,,0,0,0,,And we have the u that is equal to 0.
Dialogue: 0,00:10:33.940,00:10:37.940,辉英,,0,0,0,,And we have the u that has the correct boundary conditions.
Dialogue: 0,00:10:37.940,00:10:38.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:10:38.940,00:10:42.940,辉英,,0,0,0,,And for k, let's do...
Dialogue: 0,00:10:42.940,00:10:44.940,辉英,,0,0,0,,Previously we had a thousand iterations.
Dialogue: 0,00:10:44.940,00:10:46.940,辉英,,0,0,0,,So let's do a thousand iterations.
Dialogue: 0,00:10:46.940,00:10:47.940,辉英,,0,0,0,,So a thousand iterations.
Dialogue: 0,00:10:47.940,00:10:50.940,辉英,,0,0,0,,For each iteration, we are going to follow our formula.
Dialogue: 0,00:10:50.940,00:11:02.940,辉英,,0,0,0,,So u of k plus 1 would be equal to minus delta x squared divided by 4 times my right-hand side,
Dialogue: 0,00:11:02.940,00:11:05.940,辉英,,0,0,0,,which we called b instead of f.
Dialogue: 0,00:11:05.940,00:11:07.940,辉英,,0,0,0,,Right?
Dialogue: 0,00:11:07.940,00:11:08.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:11:08.940,00:11:21.940,辉英,,0,0,0,,And then we are going to apply this, which we can copy what we had in this iteration, paste it.
Dialogue: 0,00:11:21.940,00:11:24.940,辉英,,0,0,0,,We want to indent it correctly.
Dialogue: 0,00:11:24.940,00:11:31.940,辉英,,0,0,0,,Then instead of this iteration, I'm going to say u k plus 1 ij is equal to...
Dialogue: 0,00:11:31.940,00:11:39.940,辉英,,0,0,0,,is equal to itself plus...
Dialogue: 0,00:11:39.940,00:11:43.940,辉英,,0,0,0,,this would be u...
Dialogue: 0,00:11:43.940,00:11:46.940,辉英,,0,0,0,,this would be u...
Dialogue: 0,00:11:46.940,00:11:47.940,辉英,,0,0,0,,this would be u...
Dialogue: 0,00:11:47.940,00:11:52.940,辉英,,0,0,0,,this would be u...
Dialogue: 0,00:11:52.940,00:11:54.940,辉英,,0,0,0,,divided by 4.
Dialogue: 0,00:11:54.940,00:11:57.940,辉英,,0,0,0,,And I'll get rid of the expanded.
Dialogue: 0,00:11:57.940,00:11:59.940,辉英,,0,0,0,,The solution u is also expanded.
Dialogue: 0,00:11:59.940,00:12:01.940,辉英,,0,0,0,,But like we called it, the expanded solution.
Dialogue: 0,00:12:01.940,00:12:04.940,辉英,,0,0,0,,So this is our previous iteration u.
Dialogue: 0,00:12:04.940,00:12:05.940,辉英,,0,0,0,,Right?
Dialogue: 0,00:12:05.940,00:12:12.940,辉英,,0,0,0,,So I think we are following the formula we had before.
Dialogue: 0,00:12:12.940,00:12:17.940,辉英,,0,0,0,,Is it this, this, this, this?
Dialogue: 0,00:12:17.940,00:12:18.940,辉英,,0,0,0,,Right?
Dialogue: 0,00:12:18.940,00:12:21.940,辉英,,0,0,0,,I think we are correct.
Dialogue: 0,00:12:21.940,00:12:27.940,辉英,,0,0,0,,So let's run this to see what we get.
Dialogue: 0,00:12:27.940,00:12:29.940,辉英,,0,0,0,,We have...
Dialogue: 0,00:12:29.940,00:12:30.940,辉英,,0,0,0,,Did we run this before?
Dialogue: 0,00:12:30.940,00:12:38.940,辉英,,0,0,0,,So we get a u and u k plus 1.
Dialogue: 0,00:12:38.940,00:12:39.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:12:39.940,00:12:42.940,辉英,,0,0,0,,So we see it's an array of 130 by 130.
Dialogue: 0,00:12:42.940,00:12:46.940,辉英,,0,0,0,,The boundaries are zeros.
Dialogue: 0,00:12:46.940,00:12:50.940,辉英,,0,0,0,,Because we never changed them.
Dialogue: 0,00:12:50.940,00:12:53.940,辉英,,0,0,0,,And the interior has a bunch of numbers.
Dialogue: 0,00:12:53.940,00:12:57.940,辉英,,0,0,0,,So let's look at what u is.
Dialogue: 0,00:13:00.940,00:13:03.940,辉英,,0,0,0,,Uh-oh.
Dialogue: 0,00:13:03.940,00:13:05.940,辉英,,0,0,0,,So looks black.
Dialogue: 0,00:13:05.940,00:13:09.940,辉英,,0,0,0,,So what does that mean?
Dialogue: 0,00:13:09.940,00:13:14.940,辉英,,0,0,0,,Uh...
Dialogue: 0,00:13:14.940,00:13:24.940,辉英,,0,0,0,,Get a bunch of 40.
Dialogue: 0,00:13:24.940,00:13:27.940,辉英,,0,0,0,,So this doesn't seem right.
Dialogue: 0,00:13:27.940,00:13:28.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:13:28.940,00:13:31.940,辉英,,0,0,0,,So let's look at what we get wrong over here.
Dialogue: 0,00:13:31.940,00:13:35.940,辉英,,0,0,0,,You get to assign u to be u k plus 1.
Dialogue: 0,00:13:35.940,00:13:36.940,辉英,,0,0,0,,Oh, yes.
Dialogue: 0,00:13:36.940,00:13:40.940,辉英,,0,0,0,,I forgot to assign u equal to u k plus 1.
Dialogue: 0,00:13:40.940,00:13:41.940,辉英,,0,0,0,,Thanks.
Dialogue: 0,00:13:41.940,00:13:44.940,辉英,,0,0,0,,So practically, we did a thousand.
Dialogue: 0,00:13:44.940,00:13:46.940,辉英,,0,0,0,,But like we only did one iteration.
Dialogue: 0,00:13:46.940,00:13:50.940,辉英,,0,0,0,,Because we never changed u to be the next iteration.
Dialogue: 0,00:13:50.940,00:13:54.940,辉英,,0,0,0,,So let's first try it with 100 iterations to see what we get.
Dialogue: 0,00:13:54.940,00:13:55.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:13:55.940,00:13:56.940,辉英,,0,0,0,,So that's done.
Dialogue: 0,00:13:56.940,00:13:57.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:13:57.940,00:14:01.940,辉英,,0,0,0,,So we are looking at a continuous array of numbers.
Dialogue: 0,00:14:01.940,00:14:04.940,辉英,,0,0,0,,That seems to be a lot better.
Dialogue: 0,00:14:04.940,00:14:07.940,辉英,,0,0,0,,So I am sure of u.
Dialogue: 0,00:14:07.940,00:14:08.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:14:08.940,00:14:11.940,辉英,,0,0,0,,It does give us something that looks like the original picture.
Dialogue: 0,00:14:11.940,00:14:22.940,辉英,,0,0,0,,But I think the coloring was wrong because these numbers are not properly scaled.
Dialogue: 0,00:14:22.940,00:14:25.940,辉英,,0,0,0,,So I am sure it's very sensitive to the type of the numbers.
Dialogue: 0,00:14:25.940,00:14:26.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:14:26.940,00:14:28.940,辉英,,0,0,0,,So let's look at the type of the array.
Dialogue: 0,00:14:28.940,00:14:34.940,辉英,,0,0,0,,So if the type is integers, it assumes I have 0 to 225.
Dialogue: 0,00:14:34.940,00:14:36.940,辉英,,0,0,0,,So like the proper color.
Dialogue: 0,00:14:36.940,00:14:41.940,辉英,,0,0,0,,If the array is floating points, I think I need to scale them to 0 to 1.
Dialogue: 0,00:14:41.940,00:14:47.940,辉英,,0,0,0,,So what I should be doing is I am sure u divided by 255.
Dialogue: 0,00:14:47.940,00:14:49.940,辉英,,0,0,0,,That should be the proper scaling.
Dialogue: 0,00:14:49.940,00:14:50.940,辉英,,0,0,0,,Okay.
Dialogue: 0,00:14:50.940,00:14:55.940,辉英,,0,0,0,,So now we are looking at something that resembles the original solution.
