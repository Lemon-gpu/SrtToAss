[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
PlayResX: 1080
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: 辉英,Tahoma,35,&H00FFFFFF,&H000000FF,&H003B3C3D,&H00000000,0,0,0,0,70,70,1,0,1,1.3,0.2,2,0,0,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,00:00:00.000,00:00:06.840,辉英,,0,0,0,,So let's first discuss what is iterative methods for solving steady state equations.
Dialogue: 0,00:00:08.320,00:00:14.800,辉英,,0,0,0,,Okay, so iterative methods have been developed pretty early.
Dialogue: 0,00:00:16.140,00:00:23.560,辉英,,0,0,0,,They are developed because of a simple reason that when the matrices get large enough,
Dialogue: 0,00:00:24.560,00:00:28.020,辉英,,0,0,0,,it is very hard to solve these matrix equations.
Dialogue: 0,00:00:28.020,00:00:36.100,辉英,,0,0,0,,And again, going back to the age when people don't even have computers,
Dialogue: 0,00:00:36.460,00:00:38.520,辉英,,0,0,0,,they started using iterative methods.
Dialogue: 0,00:00:40.040,00:00:44.840,辉英,,0,0,0,,So let's say somebody wants to solve a structural equation,
Dialogue: 0,00:00:45.220,00:00:53.720,辉英,,0,0,0,,and they want to figure out what are the deformations of various elements under a certain load.
Dialogue: 0,00:00:55.840,00:00:57.380,辉英,,0,0,0,,How they do it?
Dialogue: 0,00:00:58.020,00:01:01.400,辉英,,0,0,0,,Is how they started doing it.
Dialogue: 0,00:01:03.020,00:01:08.340,辉英,,0,0,0,,When the matrix is very large, when the system is too large to be solved using Gauss elimination.
Dialogue: 0,00:01:08.720,00:01:12.120,辉英,,0,0,0,,Remember at that time there is no computer, so if you want to do Gauss elimination,
Dialogue: 0,00:01:12.460,00:01:17.580,辉英,,0,0,0,,there is a huge amount of numbers just to be calculated by hand.
Dialogue: 0,00:01:18.800,00:01:25.140,辉英,,0,0,0,,So what they started doing is to relax, is to move one element at a time.
Dialogue: 0,00:01:26.180,00:01:27.480,辉英,,0,0,0,,And figure out.
Dialogue: 0,00:01:28.020,00:01:33.020,辉英,,0,0,0,,If you go through all the elements, just make each individual element into equilibrium.
Dialogue: 0,00:01:34.220,00:01:39.120,辉英,,0,0,0,,If you go around a few times, although the entire system may not achieve equilibrium yet,
Dialogue: 0,00:01:39.420,00:01:46.640,辉英,,0,0,0,,but it may be a good enough approximation if you iteratively make individual elements into equilibrium.
Dialogue: 0,00:01:48.020,00:01:51.820,辉英,,0,0,0,,So that is one way of thinking about iterative methods.
Dialogue: 0,00:01:52.720,00:01:57.820,辉英,,0,0,0,,Okay, so I'm going to introduce iterative methods using the Poisson's equation.
Dialogue: 0,00:01:58.020,00:02:05.620,辉英,,0,0,0,,So if you have a Poisson's equation, du squared dx squared equal to f.
Dialogue: 0,00:02:08.320,00:02:13.220,辉英,,0,0,0,,And if you are not allowed to use any matrix solvers, let's say, let's assume.
Dialogue: 0,00:02:14.020,00:02:19.220,辉英,,0,0,0,,Okay, or let's see, let's say, how do you solve this equation?
Dialogue: 0,00:02:21.320,00:02:26.220,辉英,,0,0,0,,One way to solve this equation if you are not allowed to use backslash or any matrix solvers,
Dialogue: 0,00:02:26.220,00:02:29.720,辉英,,0,0,0,,is to solve an unsteady equation instead.
Dialogue: 0,00:02:30.820,00:02:31.320,辉英,,0,0,0,,Right?
Dialogue: 0,00:02:31.520,00:02:34.520,辉英,,0,0,0,,So I can change this equation, I can change my problem.
Dialogue: 0,00:02:35.320,00:02:44.720,辉英,,0,0,0,,To that, I want to solve the heat equation, du dt equal to partial square u partial x squared.
Dialogue: 0,00:02:44.920,00:02:46.920,辉英,,0,0,0,,And what should I add on top of that?
Dialogue: 0,00:02:49.520,00:02:55.520,辉英,,0,0,0,,If I solve this equation, what I get at the end is, so let's say boundary condition again, very simple.
Dialogue: 0,00:02:55.520,00:02:56.020,辉英,,0,0,0,,u z.
Dialogue: 0,00:02:56.020,00:02:58.020,辉英,,0,0,0,,u zero equal to u one equal to zero.
Dialogue: 0,00:03:00.020,00:03:06.020,辉英,,0,0,0,,And again, u zero equal to u one equal to zero.
Dialogue: 0,00:03:06.320,00:03:09.520,辉英,,0,0,0,,So if I solve this equation, I will get zero at the end.
Dialogue: 0,00:03:09.820,00:03:10.320,辉英,,0,0,0,,Right?
Dialogue: 0,00:03:11.320,00:03:18.320,辉英,,0,0,0,,So how should I modify this equation so that I get a solution to the equation I want to solve at the end?
Dialogue: 0,00:03:20.320,00:03:22.320,辉英,,0,0,0,,Minus f, right?
Dialogue: 0,00:03:23.320,00:03:25.320,辉英,,0,0,0,,So if I solve this equation, and assume myself,
Dialogue: 0,00:03:26.020,00:03:28.020,辉英,,0,0,0,,that the solution procedure is stable,
Dialogue: 0,00:03:29.520,00:03:33.520,辉英,,0,0,0,,then at the end, when I converge to a steady state solution,
Dialogue: 0,00:03:34.320,00:03:40.520,辉英,,0,0,0,,the du dt term becomes smaller and smaller as I iterate, because of stability.
Dialogue: 0,00:03:42.020,00:03:46.020,辉英,,0,0,0,,What I get at the end is a solution to the equation I want to solve.
Dialogue: 0,00:03:47.520,00:03:48.020,辉英,,0,0,0,,Right?
Dialogue: 0,00:03:50.020,00:03:54.020,辉英,,0,0,0,,And remember, by solving this unsteady equation,
Dialogue: 0,00:03:54.020,00:03:56.520,辉英,,0,0,0,,we don't actually have to solve any matrix equations.
Dialogue: 0,00:03:56.520,00:04:01.020,辉英,,0,0,0,,Even if, let's say, we discretize this equation no matter using finite,
Dialogue: 0,00:04:01.020,00:04:03.520,辉英,,0,0,0,,so okay, so let's not talk about finite element yet.
Dialogue: 0,00:04:03.520,00:04:05.520,辉英,,0,0,0,,So let's talk about finite difference.
Dialogue: 0,00:04:05.520,00:04:10.520,辉英,,0,0,0,,If we talk about finite difference, what we get is du dt, where u is a vector,
Dialogue: 0,00:04:10.520,00:04:15.520,辉英,,0,0,0,,being equal to matrix A times u minus this f,
Dialogue: 0,00:04:15.520,00:04:20.520,辉英,,0,0,0,,where A is a finite difference approximation to the second-order derivative.
Dialogue: 0,00:04:21.020,00:04:22.020,辉英,,0,0,0,,Right?
Dialogue: 0,00:04:22.020,00:04:23.020,辉英,,0,0,0,,So,
Dialogue: 0,00:04:23.020,00:04:28.020,辉英,,0,0,0,,in order to solve this equation, for example, using forward Euler or Runge-Kaede method,
Dialogue: 0,00:04:28.020,00:04:31.020,辉英,,0,0,0,,I don't need to solve a matrix equation for A.
Dialogue: 0,00:04:32.020,00:04:33.020,辉英,,0,0,0,,What do I need?
Dialogue: 0,00:04:34.520,00:04:38.520,辉英,,0,0,0,,How do I use this matrix if I solve this equation with forward Euler?
Dialogue: 0,00:04:39.520,00:04:41.020,辉英,,0,0,0,,Multiplication, right.
Dialogue: 0,00:04:41.020,00:04:48.020,辉英,,0,0,0,,I only, iterating method in general only requires explicit operation with the matrix,
Dialogue: 0,00:04:48.020,00:04:49.520,辉英,,0,0,0,,for example, multiplication.
Dialogue: 0,00:04:49.520,00:04:52.020,辉英,,0,0,0,,Okay, multiplication is a very,
Dialogue: 0,00:04:52.020,00:04:56.520,辉英,,0,0,0,,it's basically sometimes the only requirement you have on the matrix
Dialogue: 0,00:04:56.520,00:05:00.020,辉英,,0,0,0,,in order to apply iterative methods.
Dialogue: 0,00:05:01.020,00:05:03.520,辉英,,0,0,0,,So, for example, if I want forward Euler,
Dialogue: 0,00:05:03.520,00:05:13.020,辉英,,0,0,0,,I'm going to be saying u of k plus 1 minus u k divided by delta t
Dialogue: 0,00:05:13.020,00:05:17.520,辉英,,0,0,0,,is equal to A times u k minus f.
Dialogue: 0,00:05:18.020,00:05:20.520,辉英,,0,0,0,,Right, so k here is the time step.
Dialogue: 0,00:05:20.520,00:05:28.020,辉英,,0,0,0,,And it makes sense for me to choose delta t to be as large as this method is stable,
Dialogue: 0,00:05:28.020,00:05:31.520,辉英,,0,0,0,,so that I converge to a steady state as fast as possible.
Dialogue: 0,00:05:32.520,00:05:33.020,辉英,,0,0,0,,So,
Dialogue: 0,00:05:34.020,00:05:35.020,辉英,,0,0,0,,so you can,
Dialogue: 0,00:05:35.020,00:05:38.520,辉英,,0,0,0,,I'm going to be talking about Jacobi iteration method next,
Dialogue: 0,00:05:38.520,00:05:46.520,辉英,,0,0,0,,and you're going to see a very close analogy to the forward Euler method of solving an unsteady equation,
Dialogue: 0,00:05:47.520,00:05:50.020,辉英,,0,0,0,,the iterative method of solving the steady state equation.
Dialogue: 0,00:05:50.520,00:05:56.020,辉英,,0,0,0,,And in general, you can think of iterative method as a generalization
Dialogue: 0,00:05:56.020,00:06:00.520,辉英,,0,0,0,,of solving an unsteady version of the equation,
Dialogue: 0,00:06:00.520,00:06:04.520,辉英,,0,0,0,,so that you obtain a steady state equation,
Dialogue: 0,00:06:04.520,00:06:06.520,辉英,,0,0,0,,a steady state solution,
Dialogue: 0,00:06:06.520,00:06:10.520,辉英,,0,0,0,,when k here goes to infinity.
Dialogue: 0,00:06:10.520,00:06:14.020,辉英,,0,0,0,,k can be considered as a pseudo time,
Dialogue: 0,00:06:14.020,00:06:15.520,辉英,,0,0,0,,in this case,
Dialogue: 0,00:06:15.520,00:06:18.520,辉英,,0,0,0,,or a iteration number,
Dialogue: 0,00:06:18.520,00:06:19.520,辉英,,0,0,0,,rigorously.
Dialogue: 0,00:06:20.520,00:06:22.520,辉英,,0,0,0,,Okay.
Dialogue: 0,00:06:22.520,00:06:29.520,辉英,,0,0,0,,So the first type of iterative method we are going to be talking about is the Jacobi iteration method.
Dialogue: 0,00:06:29.520,00:06:34.520,辉英,,0,0,0,,So the Jacobi iteration method starts with,
Dialogue: 0,00:06:34.520,00:06:38.520,辉英,,0,0,0,,so all the iteration methods start with a matrix.
Dialogue: 0,00:06:38.520,00:06:43.520,辉英,,0,0,0,,So we want to look at the solution A u equal to b.
Dialogue: 0,00:06:43.520,00:06:44.520,辉英,,0,0,0,,Okay, so,
Dialogue: 0,00:06:44.520,00:06:47.520,辉英,,0,0,0,,so iterative methods for solving linear equations start with the linear equation.
Dialogue: 0,00:06:47.520,00:06:49.520,辉英,,0,0,0,,They don't usually start with the,
Dialogue: 0,00:06:49.520,00:06:51.520,辉英,,0,0,0,,the PDE.
Dialogue: 0,00:06:51.520,00:06:56.520,辉英,,0,0,0,,But sometimes you have to use the properties of the PDE.
Dialogue: 0,00:06:56.520,00:06:57.520,辉英,,0,0,0,,Okay.
Dialogue: 0,00:06:57.520,00:07:00.520,辉英,,0,0,0,,So, but Jacobi iteration requires just the matrix.
Dialogue: 0,00:07:00.520,00:07:03.520,辉英,,0,0,0,,So you have A u equal to b.
Dialogue: 0,00:07:03.520,00:07:05.520,辉英,,0,0,0,,That can be,
Dialogue: 0,00:07:05.520,00:07:11.520,辉英,,0,0,0,,that equation can be split into many parts.
Dialogue: 0,00:07:11.520,00:07:17.520,辉英,,0,0,0,,When the matrix A can be split into a diagonal part of A,
Dialogue: 0,00:07:17.520,00:07:19.520,辉英,,0,0,0,,plus the lower diagonal part of A,
Dialogue: 0,00:07:19.520,00:07:24.520,辉英,,0,0,0,,plus upper diagonal part of A.
Dialogue: 0,00:07:24.520,00:07:29.520,辉英,,0,0,0,,And Jacobi iteration works very well if the Jacobi,
Dialogue: 0,00:07:29.520,00:07:35.520,辉英,,0,0,0,,if the diagonal part of A is dominant,
Dialogue: 0,00:07:35.520,00:07:36.520,辉英,,0,0,0,,at least not zero.
Dialogue: 0,00:07:36.520,00:07:38.520,辉英,,0,0,0,,The diagonal part of A cannot be zero,
Dialogue: 0,00:07:38.520,00:07:39.520,辉英,,0,0,0,,and it works,
Dialogue: 0,00:07:39.520,00:07:45.520,辉英,,0,0,0,,the larger the diagonal part of A is compared to the off diagonal parts,
Dialogue: 0,00:07:45.520,00:07:46.520,辉英,,0,0,0,,the better.
Dialogue: 0,00:07:46.520,00:07:50.520,辉英,,0,0,0,,The better usually Jacobi iteration is going to work.
Dialogue: 0,00:07:50.520,00:07:56.520,辉英,,0,0,0,,Because how it works is when you have a splitting that way,
Dialogue: 0,00:07:56.520,00:08:03.520,辉英,,0,0,0,,you can write the equation as d times u plus l times u plus u times u.
Dialogue: 0,00:08:03.520,00:08:06.520,辉英,,0,0,0,,So this u and this u is different.
Dialogue: 0,00:08:06.520,00:08:09.520,辉英,,0,0,0,,This u is the upper diagonal part,
Dialogue: 0,00:08:09.520,00:08:12.520,辉英,,0,0,0,,and this u is the solution equal to b.
Dialogue: 0,00:08:12.520,00:08:14.520,辉英,,0,0,0,,And what we do is,
Dialogue: 0,00:08:14.520,00:08:19.520,辉英,,0,0,0,,we move all the off diagonal components to the right hand side.
Dialogue: 0,00:08:19.520,00:08:28.520,辉英,,0,0,0,,And thereby getting d u is equal to b minus l u minus u u.
Dialogue: 0,00:08:28.520,00:08:32.520,辉英,,0,0,0,,So up to now this is just an algebraic manipulation.
Dialogue: 0,00:08:32.520,00:08:37.520,辉英,,0,0,0,,But then something is going to be different.
Dialogue: 0,00:08:37.520,00:08:42.520,辉英,,0,0,0,,I'm going to put a superscript,
Dialogue: 0,00:08:42.520,00:08:43.520,辉英,,0,0,0,,k plus,
Dialogue: 0,00:08:43.520,00:08:46.520,辉英,,0,0,0,,k plus one on here,
Dialogue: 0,00:08:46.520,00:08:53.520,辉英,,0,0,0,,and a superscript k over here.
Dialogue: 0,00:08:53.520,00:08:55.520,辉英,,0,0,0,,So this is saying that,
Dialogue: 0,00:08:55.520,00:08:56.520,辉英,,0,0,0,,okay, first of all,
Dialogue: 0,00:08:56.520,00:09:01.520,辉英,,0,0,0,,let's look at what if I started with the correct solution.
Dialogue: 0,00:09:01.520,00:09:04.520,辉英,,0,0,0,,What if I have an initial guess?
Dialogue: 0,00:09:04.520,00:09:09.520,辉英,,0,0,0,,So u zero is called the initial guess.
Dialogue: 0,00:09:09.520,00:09:12.520,辉英,,0,0,0,,In general, it is just a guess.
Dialogue: 0,00:09:12.520,00:09:16.520,辉英,,0,0,0,,It doesn't have to be accurate at all.
Dialogue: 0,00:09:16.520,00:09:19.520,辉英,,0,0,0,,But if you started with the correct solution,
Dialogue: 0,00:09:19.520,00:09:21.520,辉英,,0,0,0,,if u zero is equal to u,
Dialogue: 0,00:09:21.520,00:09:24.520,辉英,,0,0,0,,what is u one going to be?
