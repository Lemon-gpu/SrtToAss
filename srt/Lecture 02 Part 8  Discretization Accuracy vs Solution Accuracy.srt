1
00:00:00,000 --> 00:00:06,380
Okay, we already discussed the truncation error in finite difference.

2
00:00:06,380 --> 00:00:16,100
So the truncation error is how much error we are making in approximating all the differential operators in the equation.

3
00:00:16,100 --> 00:00:22,600
So in our previous case, we did two equations.

4
00:00:22,600 --> 00:00:31,420
It's equal to kappa times pi square u pi square x square.

5
00:00:33,420 --> 00:00:42,680
And the truncation error, because we are not approximating the time derivative term, we're just treating it as OD, we are only converting from PD to OD.

6
00:00:43,240 --> 00:00:46,080
The truncation error in that process of truncation error is how much error we are making in finite difference.

7
00:00:46,080 --> 00:01:04,160
So the conversion is defined as ui plus 1 plus ui minus 1 minus 2ui divided by delta x minus, we also have a kappa, minus pi square u pi square x square.

8
00:01:04,880 --> 00:01:05,060
Right?

9
00:01:05,540 --> 00:01:06,640
That's the truncation error.

10
00:01:07,980 --> 00:01:11,540
So this is the error in approximating the PDE.

11
00:01:11,540 --> 00:01:14,960
It is not the error in the solution.

12
00:01:16,080 --> 00:01:18,600
What do I mean by the error in the solution?

13
00:01:19,520 --> 00:01:24,820
The error in the solution is the difference, as I call it, e.

14
00:01:25,800 --> 00:01:27,620
That's the error in the solution.

15
00:01:28,320 --> 00:01:39,180
It is the difference between the ui you get minus u at i delta x analytic.

16
00:01:42,180 --> 00:01:44,000
The word analytic.

17
00:01:46,080 --> 00:01:53,080
A total error in the solution is known as a total time error.

18
00:01:53,080 --> 00:02:05,820
The relative expression is used a lot because when we compare a numerical solution with an analytic solution, for example the straight line, we know at the end of the evaluation, we use u analytic as the real solution, the actual solution, the exact solution, so some people also use the exact here.

19
00:02:05,820 --> 00:02:09,460
And.

20
00:02:09,460 --> 00:02:13,560
In your project you also are going to derive an analytic solution before you even start coding.

21
00:02:13,560 --> 00:02:14,660
But in a lot of cases, there is a constant of time, that's the result is also given to the solution owner.

22
00:02:14,660 --> 00:02:15,040
It's a function function as a function again.

23
00:02:15,040 --> 00:02:15,200
Right?

24
00:02:15,200 --> 00:02:15,500
Yeah.

25
00:02:15,520 --> 00:02:15,780
Eat it.

26
00:02:15,780 --> 00:02:15,840
Yeah.

27
00:02:15,840 --> 00:02:16,020
literally keep telling me to do it Triangle.

28
00:02:16,020 --> 00:02:23,980
is no analytic solutions to start with so we may also think of that as a exact

29
00:02:23,980 --> 00:02:31,280
solution some solution that you can't really derive but it's still there is

30
00:02:31,280 --> 00:02:35,960
the exact solution of the partial differential equation so now the

31
00:02:35,960 --> 00:02:39,880
solution error is what's the difference between the numerical solution and the

32
00:02:39,880 --> 00:02:47,760
exact solution and this is different from the truncation error it can be

33
00:02:47,760 --> 00:03:05,680
quite different okay and it is different because of this so if you solve if you

34
00:03:05,680 --> 00:03:09,840
solve the equation in two ways right if you write down

35
00:03:09,840 --> 00:03:09,860
a

36
00:03:09,880 --> 00:03:14,940
the differential equation for the analytic one, this is actually, let me just write it as A,

37
00:03:15,280 --> 00:03:18,260
this is the equation satisfied by the analytic solution.

38
00:03:19,960 --> 00:03:26,720
And the actual numerical solution satisfies a different equation.

39
00:03:27,500 --> 00:03:31,640
It satisfies, let me use hat to denote the numerical solution,

40
00:03:31,960 --> 00:03:34,300
to distinguish from the analytical solution.

41
00:03:34,300 --> 00:03:40,160
It's equal to kappa times the finite difference operator,

42
00:03:40,740 --> 00:03:48,900
or the discretized operator.

43
00:03:49,080 --> 00:03:53,700
So this is the equation satisfied by these two different equations.

44
00:03:58,260 --> 00:03:59,140
Okay.

45
00:04:00,060 --> 00:04:02,540
Now, if you subtract,

46
00:04:03,180 --> 00:04:04,280
the right-hand side,

47
00:04:04,280 --> 00:04:06,400
the left-hand side equation from the left-hand side equation,

48
00:04:07,040 --> 00:04:08,680
what do you get?

49
00:04:15,080 --> 00:04:17,000
If you do that subtraction,

50
00:04:18,160 --> 00:04:19,540
what you get is,

51
00:04:20,460 --> 00:04:28,140
the left-hand side is the derivative of u hat minus the derivative of u analytic.

52
00:04:30,140 --> 00:04:33,300
Or, if you collect this derivative,

53
00:04:33,300 --> 00:04:34,240
it's actually,

54
00:04:34,280 --> 00:04:36,840
it's actually partial e, partial t.

55
00:04:38,640 --> 00:04:39,140
Right?

56
00:04:41,360 --> 00:04:41,860
Okay.

57
00:04:42,440 --> 00:04:51,680
And now, the right-hand side is different by kappa times ui plus 1 hat,

58
00:04:54,000 --> 00:04:59,040
plus ui minus 1 hat, minus 2 ui hat,

59
00:05:00,400 --> 00:05:01,600
divided by,

60
00:05:04,280 --> 00:05:04,780
uh,

61
00:05:10,960 --> 00:05:12,160
delta x squared,

62
00:05:12,400 --> 00:05:17,060
minus partial squared ua partial x squared.

63
00:05:25,240 --> 00:05:25,740
Okay.

64
00:05:26,980 --> 00:05:28,100
So this term,

65
00:05:28,860 --> 00:05:30,960
is it the truncation error?

66
00:05:33,180 --> 00:05:33,680
Is it?

67
00:05:34,280 --> 00:05:42,840
So can somebody see the difference between the right-hand side of this equation and the

68
00:05:42,840 --> 00:05:54,460
truncation error?

69
00:05:54,460 --> 00:06:00,020
So if the right-hand side is just the truncation error, that's great, because I know that if

70
00:06:00,020 --> 00:06:08,500
the truncation error first of all is small, then the solution error just grows by a rate

71
00:06:08,500 --> 00:06:12,160
that is defined by the truncation error.

72
00:06:12,160 --> 00:06:17,500
So if the truncation error is going to be bounded, for example, by 10 to the minus 5,

73
00:06:17,500 --> 00:06:22,960
then my solution error is going to be bounded by 10 to the minus 5 times t, which as long

74
00:06:22,960 --> 00:06:27,420
as t is not huge, I'm happy.

75
00:06:27,420 --> 00:06:30,000
But unfortunately, it doesn't work like that.

76
00:06:30,000 --> 00:06:36,440
If you look at the right-hand side, what's the difference between this and tau?

77
00:06:36,440 --> 00:06:38,240
Is this equal to tau?

78
00:06:38,240 --> 00:06:39,240
Yes?

79
00:06:39,240 --> 00:06:47,000
Well, there's a ua there instead of just u.

80
00:06:47,000 --> 00:06:48,320
Exactly.

81
00:06:48,320 --> 00:06:52,680
There is a ua here instead of u.

82
00:06:52,680 --> 00:06:59,980
The truncation error is defined by plugging the same u, the same solution, to two u's.

83
00:06:59,980 --> 00:07:05,220
So there's two different operators, one analytic, one numeric.

84
00:07:05,220 --> 00:07:11,140
Well, the right-hand side of this error equation is by plugging two different solutions into

85
00:07:11,140 --> 00:07:13,140
two different operators.

86
00:07:13,140 --> 00:07:17,100
It's plugging the numerical solution into the numerical operator, and the analytic solution

87
00:07:17,100 --> 00:07:19,220
into the analytic operator.

88
00:07:19,220 --> 00:07:25,920
Okay, so there is one step between this and tau, and that is the step that can mess up

89
00:07:25,920 --> 00:07:28,380
a lot of things if you are not careful.

90
00:07:28,380 --> 00:07:32,940
And that's what makes things like stability very important.

91
00:07:32,940 --> 00:07:35,260
So that step is the following.

92
00:07:35,260 --> 00:07:44,820
First of all, I want to look at, I want to basically make the truncation error, I want

93
00:07:44,820 --> 00:07:49,500
to construct, I want to manufacture a truncation error in this.

94
00:07:49,500 --> 00:07:55,620
So what I'm going to do is I'm going to minus a ui plus 1 analytic.

95
00:07:55,620 --> 00:07:57,620
Plus, sorry.

96
00:07:57,620 --> 00:08:05,500
Plus ui minus 1 analytic, minus 2 ui analytic here.

97
00:08:05,500 --> 00:08:07,520
This is manufactured.

98
00:08:07,520 --> 00:08:11,360
Then plus the same thing.

99
00:08:11,360 --> 00:08:18,320
I'm subtracting and adding the same thing, which is basically doing nothing, making the

100
00:08:18,320 --> 00:08:23,180
equation still hold.

101
00:08:23,180 --> 00:08:27,340
Right?

102
00:08:27,340 --> 00:08:29,160
You see what I'm doing here?

103
00:08:29,160 --> 00:08:34,240
I'm subtracting this term and I'm adding the same term into the equation.

104
00:08:34,240 --> 00:08:36,100
Alright.

105
00:08:36,100 --> 00:08:41,200
So now where is the truncation error?

106
00:08:41,200 --> 00:08:55,240
Do we see something that is actually equal to the truncation error here?

107
00:08:55,240 --> 00:08:59,240
The second line, right?

108
00:08:59,240 --> 00:09:09,860
This is now plugging the same analytical solution, both are ua, into two different operators.

109
00:09:09,860 --> 00:09:12,040
So this is the truncation error.

110
00:09:12,040 --> 00:09:14,900
But we also have a first term.

111
00:09:14,900 --> 00:09:23,160
We also have a first term that is actually plugging in two different solutions into the

112
00:09:23,160 --> 00:09:24,900
same discrete operator.

113
00:09:24,900 --> 00:09:29,740
And these two different solutions, the difference between them is actually e.

114
00:09:29,740 --> 00:09:32,980
This u hat minus ua is actually e.

115
00:09:32,980 --> 00:09:35,420
So the time evolution of the error has two terms.

116
00:09:35,420 --> 00:09:37,540
One term is the truncation error.

117
00:09:37,540 --> 00:09:44,000
Another term is plugging in the error itself into the discrete operator.

118
00:09:44,000 --> 00:09:50,320
And the first term is why stability of the discrete operator is very important.

119
00:09:50,320 --> 00:09:53,620
Because if the operator is not stable.

120
00:09:53,620 --> 00:09:54,560
That means even.

121
00:09:54,560 --> 00:10:00,600
A very slight truncation error is going to be exponentially amplified by the discrete

122
00:10:00,600 --> 00:10:05,060
operator and your whole solution error becomes huge.

123
00:10:05,060 --> 00:10:06,560
Your solution becomes garbage.

124
00:10:06,560 --> 00:10:11,080
Alright, we are going to continue discussing that next lecture.

