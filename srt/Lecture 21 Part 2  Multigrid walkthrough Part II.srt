1
00:00:00,000 --> 00:00:12,260
and what happens next is a is the interpolation of the solution of the

2
00:00:12,260 --> 00:00:17,240
solution which is the correction I should have on the final grid solution

3
00:00:17,240 --> 00:00:22,500
back to the final grid so that's what we are doing here we complete the solution

4
00:00:22,500 --> 00:00:29,640
and we add the correction to the previous solution you 0 so let's see

5
00:00:29,640 --> 00:00:36,860
what the addition is previously my u 0

6
00:00:37,460 --> 00:00:46,440
my u 0 is an array like that and the D u F is an array like that so adding them

7
00:00:46,440 --> 00:00:52,500
together my u 1 is going to be basically this plus this so so

8
00:00:52,500 --> 00:00:57,540
this array has the smoother features and this array has the less smooth

9
00:00:57,540 --> 00:01:03,960
features of the solution so adding them together I have the u 1 and after a few

10
00:01:03,960 --> 00:01:10,820
post smoothing iterations my u 1 is going to be even more improved right so

11
00:01:10,820 --> 00:01:16,920
it basically what this post smoothing iteration do is it it removes the error

12
00:01:16,920 --> 00:01:21,500
that comes from interpolating the D u from the causal grid to the final grid

13
00:01:21,500 --> 00:01:22,480
the interpolation of the solution so that's what we are doing here so this

14
00:01:22,480 --> 00:01:29,240
interpolation is going to make an error all right okay so if we continue my next

15
00:01:29,240 --> 00:01:37,240
time I'm going to come back to line 22 okay here is

16
00:01:43,240 --> 00:01:51,600
what happened oh because it's doing the iterations I shouldn't put it here okay

17
00:01:51,600 --> 00:01:52,400
continue I

18
00:01:52,480 --> 00:01:57,200
I'm going to come back to line 22 on the on the course on the final grade so let

19
00:01:57,200 --> 00:02:06,080
me go back a few times to see how the image is going to change so now we are

20
00:02:06,080 --> 00:02:12,520
at an interval equal to 16 let's go back to and let's go to a more final

21
00:02:12,520 --> 00:02:21,240
grid okay 128 okay so let's stop over here and look at what's the effect of the

22
00:02:21,240 --> 00:02:27,780
little line hours over here so what's the effect of the interpolated iteration

23
00:02:27,780 --> 00:02:30,960
I left in the horizontal line and I left it to the horizontal line for the first

24
00:02:30,960 --> 00:02:34,480
example okay you can see here with that this is actually our partial uncial

25
00:02:34,480 --> 00:02:37,440
요 and I didn't show it but the salvation has capped its error to Kang

26
00:02:37,440 --> 00:02:39,740
okay so now we're done with our interpolation and our isolations so

27
00:02:39,740 --> 00:02:42,720
the next thing I'm going to do is I'm going to change something um let me

28
00:02:42,720 --> 00:02:47,380
show you how that looks like okay so this is my initial beautification this is

29
00:02:47,380 --> 00:02:50,680
you can see here's the ghost Oddland where we are in our Π user and this you

30
00:02:50,680 --> 00:02:52,180
solutions, which is DU.

31
00:02:55,080 --> 00:02:57,260
This is my DU.

32
00:02:57,260 --> 00:02:59,620
Let me compare these.

33
00:02:59,620 --> 00:03:05,480
So my final grid solution is very sharp, but only,

34
00:03:05,480 --> 00:03:08,620
it's bigger, but only contains the very sharp features,

35
00:03:08,620 --> 00:03:10,180
the high frequency contents.

36
00:03:10,180 --> 00:03:13,720
My cost grid solution is actually a lot better,

37
00:03:13,720 --> 00:03:15,820
but it's smaller.

38
00:03:15,820 --> 00:03:21,120
Therefore, what I do is I perform this interpolation.

39
00:03:21,120 --> 00:03:24,220
So let's go here, and we have the DUF.

40
00:03:24,220 --> 00:03:30,260
Now let's look at, I am sure, of what is DUF.

41
00:03:30,260 --> 00:03:32,960
This is DUF.

42
00:03:32,960 --> 00:03:39,700
If you compare this, this is my original U0.

43
00:03:39,700 --> 00:03:43,060
This is my DUF.

44
00:03:43,060 --> 00:03:44,500
So U0, DUF.

45
00:03:44,500 --> 00:03:45,660
You can see that.

46
00:03:45,660 --> 00:03:49,260
DUF is blurred, right, because it's interpolated

47
00:03:49,260 --> 00:03:51,280
from the cost grid.

48
00:03:51,280 --> 00:03:55,960
Well, if you add this up to DU, let's do that.

49
00:03:55,960 --> 00:03:59,580
Let's step so that we have U1.

50
00:03:59,580 --> 00:04:05,940
We figure, I am sure, of U1, which is the summation of U0

51
00:04:05,940 --> 00:04:06,640
and DUF.

52
00:04:09,820 --> 00:04:15,060
Get a solution that is, of course, much better than U0.

53
00:04:15,660 --> 00:04:21,040
But it's also better than the interpolated cost grid solution.

54
00:04:21,040 --> 00:04:26,820
So this is interpolated cost grid solution.

55
00:04:26,820 --> 00:04:28,840
This is the summation of these two.

56
00:04:28,840 --> 00:04:30,420
Cost solution, summation, right?

57
00:04:30,420 --> 00:04:32,460
You can see the solution has improved.

58
00:04:32,460 --> 00:04:37,220
It has the sharp features on top of it.

59
00:04:37,220 --> 00:04:40,460
OK, let's keep going through the code.

60
00:04:40,460 --> 00:04:44,860
And now we are at an even final grid.

61
00:04:44,860 --> 00:04:45,360
OK.

62
00:04:45,660 --> 00:04:52,480
So 1024, so that's at our finest grid, right?

63
00:04:52,480 --> 00:04:55,900
So we can see the same thing here.

64
00:04:55,900 --> 00:04:59,780
I'm going to close it.

65
00:04:59,780 --> 00:05:02,640
I'm going to show the U0.

66
00:05:02,640 --> 00:05:08,960
The U0 has the very sharp contents of this airplane.

67
00:05:08,960 --> 00:05:15,060
And DUF has almost the entire solution, but it's probably

68
00:05:15,060 --> 00:05:18,960
missing the most high frequency contents.

69
00:05:18,960 --> 00:05:24,020
And now if I step over, I have U1.

70
00:05:28,120 --> 00:05:30,040
So that's our funnel.

71
00:05:30,040 --> 00:05:33,760
That's our summation of the cost grid solution

72
00:05:33,760 --> 00:05:38,800
and the smoothing I have performed in my finest grid.

73
00:05:38,800 --> 00:05:39,900
OK.

74
00:05:39,900 --> 00:05:41,380
And continue.

75
00:05:41,380 --> 00:05:44,480
I'm done with one multi-grid cycle, right?

76
00:05:44,480 --> 00:05:53,760
So I have stepped going down from the finest grid

77
00:05:53,760 --> 00:05:57,840
to the closest grid and then back to the finest grid.

78
00:05:57,840 --> 00:06:02,600
So one iteration, I have solutions of all frequency

79
00:06:02,600 --> 00:06:03,800
added together.

80
00:06:03,800 --> 00:06:07,480
And that's still not fully converged,

81
00:06:07,480 --> 00:06:10,540
because I have performed only one cycle.

82
00:06:10,540 --> 00:06:13,520
And if you keep performing these multi-grid cycles, you're going to converge.

83
00:06:13,520 --> 00:06:14,020
OK.

84
00:06:14,020 --> 00:06:14,480
OK.

85
00:06:14,480 --> 00:06:16,760
So I'm going to go back to the solution.

