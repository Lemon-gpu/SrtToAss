1
00:00:00,000 --> 00:00:06,560
So let's take a look at several examples of how we are dividing, how we can divide

2
00:00:06,560 --> 00:00:12,240
the space on which we want to solve the differential equation into small finite

3
00:00:12,240 --> 00:00:17,880
volumes. And as you can imagine the only criterion we have is that all these

4
00:00:17,880 --> 00:00:24,960
volumes, first of all they don't overlap. Two, they fill the entire space, there is no gap

5
00:00:24,960 --> 00:00:32,000
in between. So any kind of partition of unity is going to work for us.

6
00:00:32,000 --> 00:00:40,920
So this type of grid is called a block structured grid. And what you can see is

7
00:00:40,920 --> 00:00:47,280
that every piece of grid is logically a rectangle. So here for example

8
00:00:47,280 --> 00:00:53,580
you can separate a rectangle, use this, separate a rectangle over here,

9
00:00:53,580 --> 00:00:54,580
and then separate a rectangle over here.

10
00:00:54,580 --> 00:00:54,940
So you can separate a rectangle over here, and then separate a rectangle over here.

11
00:00:54,940 --> 00:01:06,140
And on the grid, on this rectangle, the grid can be arranged into i goes from 0 to ni, and j goes from 0 to nj.

12
00:01:06,140 --> 00:01:11,180
And this is another rectangle you can draw.

13
00:01:11,180 --> 00:01:20,880
Right? And so basically we have a partition of unity by first dividing the space.

14
00:01:20,880 --> 00:01:24,560
In this case it's a turbo machinery

15
00:01:24,560 --> 00:01:37,060
cascade. We have an array of status upstream and an array of compressor

16
00:01:37,060 --> 00:01:44,460
rotors which moves in space and after which another array of status.

17
00:01:44,460 --> 00:01:52,320
And we divide the entire computational space into rectangles and generate a

18
00:01:52,320 --> 00:01:54,180
mesh on each rectangle.

19
00:01:54,560 --> 00:01:59,120
So every one of these mesh is a finite volume.

20
00:01:59,120 --> 00:02:07,080
And every mesh in this case has exactly four neighbors.

21
00:02:07,080 --> 00:02:13,100
Right? It shares a non-trivial interface with four neighboring grid points.

22
00:02:13,100 --> 00:02:19,060
Okay, so basically for every mesh we're going to compute, we're going to find the four neighbors

23
00:02:19,060 --> 00:02:24,100
and use the cell averages on that cell and its four neighbors to compute the flux.

24
00:02:24,560 --> 00:02:33,680
on the four faces and then the summation the summation of the flux on

25
00:02:33,680 --> 00:02:39,780
the four interfaces multiplied by its interface face normal times the

26
00:02:39,780 --> 00:02:47,000
interface size is going to give us the time derivative of that cell average.

27
00:02:47,000 --> 00:02:50,000
Right?

28
00:02:51,220 --> 00:02:54,220
Another type of mesh is

29
00:02:54,560 --> 00:02:56,560
unstructured mesh.

30
00:02:56,560 --> 00:03:01,560
Right? This mesh is a triangular unstructured mesh.

31
00:03:01,560 --> 00:03:11,560
And in real applications unstructured mesh can have triangles, it can have mixed elements also.

32
00:03:11,560 --> 00:03:19,560
So in this case every volume is one of these triangles in two dimensions.

33
00:03:19,560 --> 00:03:23,560
And in three dimensions these can be tetrahedrals.

34
00:03:23,560 --> 00:03:24,520
Having

35
00:03:24,560 --> 00:03:26,560
four faces.

36
00:03:26,560 --> 00:03:29,560
And these triangles have three faces.

37
00:03:29,560 --> 00:03:31,560
And every triangle have how many neighbors?

38
00:03:31,560 --> 00:03:37,560
It has exactly three neighbors.

39
00:03:37,560 --> 00:03:39,560
Right?

40
00:03:39,560 --> 00:03:42,560
So and each tetrahedral would have four neighbors.

41
00:03:42,560 --> 00:03:49,560
So these are, for example, the black triangle has neighbors this one, this one, and this one only.

42
00:03:49,560 --> 00:03:53,560
All the others are not going to be counted as neighbors in a finite volume sense.

43
00:03:53,560 --> 00:03:54,560
Right?

44
00:03:54,560 --> 00:04:01,560
If you do if you do other, for example, if you do finite element, maybe these are also going to be counted also as neighbors.

45
00:04:01,560 --> 00:04:02,560
But in finite volume.

46
00:04:02,560 --> 00:04:07,560
Only the cells that shares a non-trivial interface is going to be neighbors.

47
00:04:07,560 --> 00:04:17,560
Again, we are going to use this cell and its three neighbors to compute the flux across these three sides.

48
00:04:17,560 --> 00:04:18,560
Okay.

49
00:04:18,560 --> 00:04:21,560
And the summation of the flux times the the the flux.

50
00:04:21,560 --> 00:04:28,560
The the the phase normal and times the length of the phase.

51
00:04:28,560 --> 00:04:33,560
Summed together divided by the volume of the the the area of the triangle.

52
00:04:33,560 --> 00:04:39,560
We are going to get the time derivative of that cell.

53
00:04:39,560 --> 00:04:40,560
Okay.

54
00:04:40,560 --> 00:04:45,560
So these are the two cases where the number of neighbors are fixed.

55
00:04:45,560 --> 00:04:49,560
There are also cases where the number of neighbors are not fixed.

56
00:04:49,560 --> 00:04:50,560
That also can work.

57
00:04:50,560 --> 00:05:03,560
So this is in this is particularly useful for cases where you need very different resolutions in different regions of the space.

58
00:05:03,560 --> 00:05:10,560
For example, this is an application in which obviously we want to capture.

59
00:05:10,560 --> 00:05:16,560
We want to have very high resolution almost near a contour.

60
00:05:16,560 --> 00:05:19,560
And away from the contour, we don't need much resolution.

61
00:05:19,560 --> 00:05:21,560
So this is the case.

62
00:05:21,560 --> 00:05:28,560
We can have this kind of a hierarchical adaptive measure refinement like AMR.

63
00:05:28,560 --> 00:05:34,560
So so there are very coarse grids and you can have a lot finer grids.

64
00:05:34,560 --> 00:05:38,560
In where you want to have higher resolutions.

65
00:05:38,560 --> 00:05:43,560
And for example, in this volume.

66
00:05:43,560 --> 00:05:48,560
The cells, the neighbors which you count as your cells would be this one.

67
00:05:48,560 --> 00:05:53,560
This one, this one, this one, this one, and these two.

68
00:05:53,560 --> 00:05:54,560
Right.

69
00:05:54,560 --> 00:05:57,560
So you have one, two, three, four, five, six, seven neighbors.

